$allpkmn = [
  [:VENUSAUR, :PETALDANCE, :ENERGYBALL, :SLUDGEBOMB, :TOXIC, 0, 0],
  [:CHARIZARD, :DRAGONPULSE, :FLAMETHROWER, :AIRSLASH, :OVERHEAT, 0, 0],
  [:BLASTOISE, :AQUATAIL, :SURF, :FLASHCANNON, :SHELLSMASH, 0, 0],
  [:BUTTERFREE, :BUGBUZZ, :PSYCHIC, :POISONPOWDER, :AIRSLASH, 0, 0],
  [:BEEDRILL, :POISONJAB, :BUGBITE, :ENDEAVOR, :ASSURANCE, 0, 0],
  [:PIDGEOT, :AIRSLASH, :ROOST, :AERIALACE, :QUICKATTACK, 0, 1],
  [:RATICATE, :QUICKATTACK, :CRUNCH, :SWORDSDANCE, :DIG, 0, 1],
  [:RATICATE, :CRUNCH, :SUCKERPUNCH, :DOUBLEEDGE, :SCARYFACE, 1, 1],
  [:FEAROW, :DRILLRUN, :AERIALACE, :UTURN, :STEELWING, 0, 0],
  [:ARBOK, :CRUNCH, :GUNKSHOT, :ICEFANG, :GLARE, 0, 0],
  [:RAICHU, :THUNDER, :RAINDANCE, :THUNDERBOLT, :SURF, 0, 0],
  [:RAICHU, :PSYCHIC, :THUNDERBOLT, :DRAININGKISS, :SURF, 1, 0],
  [:SANDSLASH, :EARTHQUAKE, :ROLLOUT, :SWORDSDANCE, :SLASH, 0, 0],
  [:SANDSLASH, :IRONHEAD, :ICICLECRASH, :ICICLESPEAR, :IRONDEFENSE, 1, 0],
  [:NIDOQUEEN, :TOXICSPIKES, :CRUNCH, :EARTHPOWER, :SUPERPOWER, 0, 0],
  [:NIDOKING, :POISONJAB, :EARTHQUAKE, :MEGAHORN, :TOXIC, 0, 0],
  [:CLEFABLE, :MOONBLAST, :METRONOME, :PSYCHIC, :FLAMETHROWER, 0, 1],
  [:NINETALES, :FLAMETHROWER, :WILLOWISP, :DISABLE, :ENERGYBALL, 0, 0],
  [:NINETALES, :DAZZLINGGLEAM, :ICEBEAM, :NASTYPLOT, :SHADOWBALL, 1, 0],
  [:WIGGLYTUFF, :PLAYROUGH, :PSYCHIC, :THUNDERBOLT, :MIMIC, 0, 1],
  [:VILEPLUME, :GIGADRAIN, :PETALDANCE, :SLUDGEWAVE, :DAZZLINGGLEAM, 0, 0],
  [:PARASECT, :CROSSPOISON, :XSCISSOR, :STUNSPORE, :POISONPOWDER, 0, 0],
  [:VENOMOTH, :BUGBUZZ, :ENERGYBALL, :SLUDGEBOMB, :PROTECT, 0, 1],
  [:DUGTRIO, :SANDTOMB, :NIGHTSLASH, :EARTHQUAKE, :SANDSTORM, 0, 0],
  [:DUGTRIO, :IRONHEAD, :DIG, :EARTHQUAKE, :SUCKERPUNCH, 1, 1],
  [:PERSIAN, :ASSURANCE, :SLASH, :PLAYROUGH, :DIG, 0, 0],
  [:PERSIAN, :POWERGEM, :THUNDERBOLT, :SHADOWBALL, :DARKPULSE, 1, 0],
  [:GOLDUCK, :HYDROPUMP, :SURF, :PSYCHIC, :CALMMIND, 0, 1],
  [:PRIMEAPE, :OUTRAGE, :STOMPINGTANTRUM, :CLOSECOMBAT, :SWAGGER, 0, 0],
  [:ARCANINE, :FLAMETHROWER, :FLAREBLITZ, :EXTREMESPEED, :PLAYROUGH, 0, 0],
  [:POLIWRATH, :DRAINPUNCH, :DIVE, :EARTHQUAKE, :POISONJAB, 0, 0],
  [:ALAKAZAM, :PSYCHIC, :CALMMIND, :DAZZLINGGLEAM, :SHADOWBALL, 0, 0],
  [:MACHAMP, :STONEEDGE, :DARKESTLARIAT, :CLOSECOMBAT, :BRICKBREAK, 0, 0],
  [:VICTREEBEL, :LEAFTORNADO, :LEAFBLADE, :POISONJAB, :SLEEPPOWDER, 0, 0],
  [:TENTACRUEL, :SLUDGEWAVE, :SURF, :HEX, :SCALD, 0, 1],
  [:GOLEM, :EARTHQUAKE, :STONEEDGE, :HEAVYSLAM, :SANDSTORM, 0, 1],
  [:GOLEM, :STONEEDGE, :THUNDERPUNCH, :EARTHQUAKE, :GYROBALL, 1, 1],
  [:RAPIDASH, :SMARTSTRIKE, :FLAMEWHEEL, :FLAREBLITZ, :POISONJAB, 0, 1],
  [:RAPIDASH, :PSYCHOCUT, :DRILLRUN, :MEGAHORN, :PLAYROUGH, 1, 1],
  [:SLOWBRO, :SURF, :PSYCHIC, :SHADOWBALL, :PROTECT, 0, 1],
  [:SLOWBRO, :SHELLSIDEARM, :SURF, :PSYCHIC, :ZENHEADBUTT, 1, 0],
  [:DODRIO, :LUNGE, :DRILLPECK, :FLY, :STEELWING, 0, 1],
  [:DEWGONG, :ICEBEAM, :AQUATAIL, :ICESHARD, :AQUARING, 0, 0],
  [:MUK, :SLUDGEWAVE, :SLUDGEBOMB, :DARKPULSE, :FLAMETHROWER, 0, 0],
  [:MUK, :GUNKSHOT, :KNOCKOFF, :TOXIC, :VENOMDRENCH, 1, 0],
  [:CLOYSTER, :ICICLESPEAR, :SURF, :ROCKBLAST, :PINMISSILE, 0, 1],
  [:GENGAR, :DARKPULSE, :SHADOWBALL, :SLUDGEBOMB, :THUNDERBOLT, 0, 0],
  [:HYPNO, :PSYCHIC, :HYPNOSIS, :DREAMEATER, :SHADOWBALL, 0, 1],
  [:KINGLER, :CRABHAMMER, :METALCLAW, :STOMPINGTANTRUM, :XSCISSOR, 0, 0],
  [:ELECTRODE, :DISCHARGE, :THUNDERBOLT, :LIGHTSCREEN, :THUNDERWAVE, 0, 1],
  [:EXEGGUTOR, :PSYSHOCK, :GIGADRAIN, :LEAFSTORM, :SLUDGEBOMB, 0, 0],
  [:EXEGGUTOR, :DRAGONHAMMER, :GIGADRAIN, :LEAFSTORM, :DRAGONPULSE, 1, 0],
  [:MAROWAK, :GIGAIMPACT, :BONEMERANG, :ROCKTOMB, :EARTHQUAKE, 0, 0],
  [:MAROWAK, :SHADOWBONE, :STOMPINGTANTRUM, :FLAREBLITZ, :FLAMEWHEEL, 1, 0],
  [:HITMONLEE, :BLAZEKICK, :BRICKBREAK, :POISONJAB, :THROATCHOP, 0, 0],
  [:HITMONCHAN, :DRAINPUNCH, :POWERUPPUNCH, :THUNDERPUNCH, :BULLETPUNCH, 0, 1],
  [:WEEZING, :ASSURANCE, :TOXIC, :SLUDGEBOMB, :HEATWAVE, 0, 0],
  [:WEEZING, :STRANGESTEAM, :SLUDGEBOMB, :MISTYTERRAIN, :THUNDERBOLT, 1, 1],
  [:KANGASKHAN, :OUTRAGE, :BRICKBREAK, :DRAINPUNCH, :BODYSLAM, 0, 1],
  [:SEAKING, :WATERFALL, :MEGAHORN, :RAINDANCE, :SMARTSTRIKE, 0, 0],
  [:STARMIE, :PSYCHIC, :HYDROPUMP, :POWERGEM, :RECOVER, 0, 1],
  [:MRMIME, :PSYCHIC, :DAZZLINGGLEAM, :MAGICALLEAF, :CALMMIND, 0, 1],
  [:JYNX, :PSYCHIC, :BLIZZARD, :ICEBEAM, :SHADOWBALL, 0, 0],
  [:PINSIR, :SUPERPOWER, :XSCISSOR, :SWORDSDANCE, :SUBMISSION, 0, 0],
  [:TAUROS, :ASSURANCE, :ZENHEADBUTT, :STOMPINGTANTRUM, :STONEEDGE, 0, 0],
  [:GYARADOS, :ICEFANG, :BOUNCE, :OUTRAGE, :AQUATAIL, 0, 0],
  [:LAPRAS, :ICEBEAM, :BRINE, :RAINDANCE, :SING, 0, 0],
  [:DITTO, :TRANSFORM, "", "", "", 0, 0],
  [:VAPOREON, :BRINE, :ICEBEAM, :SHADOWBALL, :AQUARING, 0, 0],
  [:JOLTEON, :THUNDERBOLT, :THUNDER, :SHADOWBALL, :RAINDANCE, 0, 0],
  [:FLAREON, :FLAREBLITZ, :BITE, :IRONTAIL, :SUPERPOWER, 0, 0],
  [:OMASTAR, :BRINE, :ANCIENTPOWER, :EARTHPOWER, :SCALD, 0, 0],
  [:KABUTOPS, :AQUAJET, :LIQUIDATION, :LEECHLIFE, :STONEEDGE, 0, 0],
  [:AERODACTYL, :GIGAIMPACT, :ROCKSLIDE, :STONEEDGE, :IRONHEAD, 0, 0],
  [:SNORLAX, :HAMMERARM, :HIGHHORSEPOWER, :HEAVYSLAM, :BODYSLAM, 0, 0],
  [:DRAGONITE, :OUTRAGE, :THUNDERPUNCH, :STONEEDGE, :DRAGONDANCE, 0, 0],
  [:MEGANIUM, :DRAGONTAIL, :SYNTHESIS, :AROMATHERAPY, :GIGADRAIN, 0, 0],
  [:TYPHLOSION, :FLAMETHROWER, :ERUPTION, :FOCUSBLAST, :SUNNYDAY, 0, 0],
  [:FERALIGATR, :DRAGONDANCE, :WATERFALL, :CRUNCH, :ICEPUNCH, 0, 0],
  [:FURRET, :SLAM, :FACADE, :IRONTAIL, :REST, 0, 1],
  [:NOCTOWL, :AIRSLASH, :HYPNOSIS, :DREAMEATER, :MOONBLAST, 0, 1],
  [:LEDIAN, :BUGBUZZ, :AIRSLASH, :REFLECT, :LIGHTSCREEN, 0, 1],
  [:ARIADOS, :LEECHLIFE, :POISONJAB, :CROSSPOISON, :SHADOWSNEAK, 0, 0],
  [:CROBAT, :LEECHLIFE, :CROSSPOISON, :BRAVEBIRD, :ZENHEADBUTT, 0, 0],
  [:LANTURN, :SCALD, :VOLTSWITCH, :TOXIC, :PROTECT, 0, 0],
  [:XATU, :PSYCHIC, :HEATWAVE, :ROOST, :TELEPORT, 0, 0],
  [:AMPHAROS, :DRAGONPULSE, :POWERGEM, :DISCHARGE, :LIGHTSCREEN, 0, 0],
  [:BELLOSSOM, :MOONBLAST, :SOLARBEAM, :GIGADRAIN, :MOONLIGHT, 0, 0],
  [:AZUMARILL, :AQUATAIL, :PLAYROUGH, :BULLDOZE, :BOUNCE, 0, 1],
  [:SUDOWOODO, :STEALTHROCK, :STONEEDGE, :WOODHAMMER, :SUCKERPUNCH, 0, 0],
  [:POLITOED, :REST, :TOXIC, :SCALD, :PROTECT, 0, 0],
  [:JUMPLUFF, :SWORDSDANCE, :GIGADRAIN, :LEECHSEED, :POISONPOWDER, 0, 1],
  [:SUNFLORA, :PETALDANCE, :SUNNYDAY, :SOLARBEAM, :SLUDGEBOMB, 0, 0],
  [:QUAGSIRE, :EARTHQUAKE, :AQUATAIL, :BRICKBREAK, :ROCKTOMB, 0, 1],
  [:ESPEON, :PSYCHIC, :DAZZLINGGLEAM, :SHADOWBALL, :REST, 0, 0],
  [:UMBREON, :FOULPLAY, :WISH, :PROTECT, :HEALBELL, 0, 0],
  [:SLOWKING, :SCALD, :PSYCHIC, :SLACKOFF, :TELEPORT, 0, 1],
  [:SLOWKING, :PSYCHIC, :SLUDGEBOMB, :FLAMETHROWER, :ICEBEAM, 1, 0],
  [:WOBBUFFET, :DESTINYBOND, :COUNTER, :ENCORE, :MIRRORCOAT, 0, 0],
  [:GIRAFARIG, :ZENHEADBUTT, :EARTHQUAKE, :CRUNCH, :PROTECT, 0, 0],
  [:FORRETRESS, :HEAVYSLAM, :GYROBALL, :SPIKES, :TOXICSPIKES, 0, 0],
  [:STEELIX, :STEALTHROCK, :EARTHQUAKE, :HEAVYSLAM, :TOXIC, 0, 1],
  [:GRANBULL, :PLAYROUGH, :OUTRAGE, :CRUNCH, :TAUNT, 0, 0],
  [:SCIZOR, :BULLETPUNCH, :IRONHEAD, :XSCISSOR, :SWORDSDANCE, 0, 1],
  [:HERACROSS, :FACADE, :THROATCHOP, :MEGAHORN, :CLOSECOMBAT, 0, 1],
  [:MAGCARGO, :STEALTHROCK, :TOXIC, :LAVAPLUME, :RECOVER, 0, 1],
  [:URSARING, :SWORDSDANCE, :FACADE, :CRUNCH, :CLOSECOMBAT, 0, 0],
  [:OCTILLERY, :SURF, :FIREBLAST, :ICEBEAM, :ENERGYBALL, 0, 1],
  [:MANTINE, :SCALD, :ROOST, :AIRSLASH, :ICEBEAM, 0, 1],
  [:SKARMORY, :WHIRLWIND, :ROOST, :BRAVEBIRD, :SPIKES, 0, 1],
  [:HOUNDOOM, :FLAMETHROWER, :DARKPULSE, :SHADOWBALL, :TAUNT, 0, 0],
  [:KINGDRA, :HYDROPUMP, :DRACOMETEOR, :SURF, :RAINDANCE, 0, 0],
  [:DONPHAN, :EARTHQUAKE, :RAPIDSPIN, :KNOCKOFF, :STEALTHROCK, 0, 0],
  [:HITMONTOP, :DIG, :CLOSECOMBAT, :SUCKERPUNCH, :DETECT, 0, 0],
  [:MILTANK, :STEALTHROCK, :MILKDRINK, :THUNDERWAVE, :SEISMICTOSS, 0, 0],
  [:BLISSEY, :SEISMICTOSS, :SOFTBOILED, :THUNDERWAVE, :TELEPORT, 0, 0],
  [:TYRANITAR, :STEALTHROCK, :ROCKBLAST, :EARTHQUAKE, :THUNDERWAVE, 0, 0],
  [:SCEPTILE, :GIGADRAIN, :ENERGYBALL, :DRAGONPULSE, :FOCUSBLAST, 0, 0],
  [:BLAZIKEN, :BLAZEKICK, :CLOSECOMBAT, :AERIALACE, :DETECT, 0, 0],
  [:SWAMPERT, :HAMMERARM, :EARTHQUAKE, :LIQUIDATION, :ROCKSLIDE, 0, 0],
  [:MIGHTYENA, :FIREFANG, :THUNDERFANG, :ICEFANG, :CRUNCH, 0, 0],
  [:BEAUTIFLY, :GIGADRAIN, :PROTECT, :QUIVERDANCE, :BUGBUZZ, 0, 0],
  [:DUSTOX, :TOXIC, :VENOSHOCK, :LEECHLIFE, :PROTECT, 0, 0],
  [:LUDICOLO, :GIGADRAIN, :HYDROPUMP, :ICEBEAM, :RAINDANCE, 0, 0],
  [:SHIFTRY, :LEAFBLADE, :FOULPLAY, :LOWSWEEP, :PROTECT, 0, 1],
  [:SWELLOW, :BRAVEBIRD, :AERIALACE, :QUICKATTACK, :UTURN, 0, 0],
  [:PELIPPER, :SCALD, :ROOST, :UTURN, :DEFOG, 0, 1],
  [:GARDEVOIR, :MOONBLAST, :PSYCHIC, :MYSTICALFIRE, :HEALINGWISH, 0, 1],
  [:MASQUERAIN, :STICKYWEB, :BUGBUZZ, :AIRSLASH, :SCALD, 0, 0],
  [:BRELOOM, :DRAINPUNCH, :SEEDBOMB, :MACHPUNCH, :STONEEDGE, 0, 1],
  [:SLAKING, :EARTHQUAKE, :FIREBLAST, :RETALIATE, :SUCKERPUNCH, 0, 0],
  [:NINJASK, :XSCISSOR, :METALCLAW, :AERIALACE, :PROTECT, 0, 0],
  [:SHEDINJA, :SHADOWCLAW, :DIG, :PHANTOMFORCE, :SPITE, 0, 0],
  [:EXPLOUD, :BOOMBURST, :OVERHEAT, :SURF, :FOCUSBLAST, 0, 0],
  [:HARIYAMA, :CLOSECOMBAT, :KNOCKOFF, :HEAVYSLAM, :STONEEDGE, 0, 0],
  [:DELCATTY, :PLAYROUGH, :FAKEOUT, :STRENGTH, :FACADE, 0, 0],
  [:SABLEYE, :KNOCKOFF, :RECOVER, :WILLOWISP, :ENCORE, 0, 0],
  [:MAWILE, :SWORDSDANCE, :PLAYROUGH, :SUCKERPUNCH, :KNOCKOFF, 0, 1],
  [:AGGRON, :STEALTHROCK, :HEADSMASH, :HEAVYSLAM, :PROTECT, 0, 1],
  [:MEDICHAM, :FAKEOUT, :HIGHJUMPKICK, :ZENHEADBUTT, :BULLETPUNCH, 0, 0],
  [:MANECTRIC, :THUNDERBOLT, :VOLTSWITCH, :ELECTRICTERRAIN, :FLAMETHROWER, 0, 0],
  [:SWALOT, :SLUDGEBOMB, :TOXIC, :SHADOWBALL, :EARTHQUAKE, 0, 1],
  [:SHARPEDO, :WATERFALL, :CRUNCH, :CLOSECOMBAT, :PROTECT, 0, 0],
  [:WAILORD, :SUBSTITUTE, :AQUARING, :PROTECT, :BLOCK, 0, 0],
  [:CAMERUPT, :FIREBLAST, :EARTHPOWER, :REST, :SLEEPTALK, 0, 1],
  [:TORKOAL, :STEALTHROCK, :LAVAPLUME, :RAPIDSPIN, :TOXIC, 0, 1],
  [:GRUMPIG, :PSYCHIC, :FOCUSBLAST, :SHADOWBALL, :CALMMIND, 0, 0],
  [:FLYGON, :DRAGONDANCE, :EARTHQUAKE, :OUTRAGE, :STONEEDGE, 0, 0],
  [:CACTURNE, :SPIKES, :GIGADRAIN, :DARKPULSE, :SUCKERPUNCH, 0, 0],
  [:ALTARIA, :DEFOG, :ROOST, :HURRICANE, :FLAMETHROWER, 0, 0],
  [:ZANGOOSE, :FACADE, :SWORDSDANCE, :CLOSECOMBAT, :XSCISSOR, 0, 0],
  [:SEVIPER, :SLUDGEWAVE, :GIGADRAIN, :FLAMETHROWER, :SUCKERPUNCH, 0, 0],
  [:LUNATONE, :METEORBEAM, :PSYSHOCK, :EARTHPOWER, :ROCKPOLISH, 0, 0],
  [:SOLROCK, :STEALTHROCK, :MORNINGSUN, :WILLOWISP, :ZENHEADBUTT, 0, 0],
  [:WHISCASH, :AQUATAIL, :EARTHQUAKE, :THRASH, :ZENHEADBUTT, 0, 1],
  [:CRAWDAUNT, :SWORDSDANCE, :CRABHAMMER, :KNOCKOFF, :AQUAJET, 0, 0],
  [:CLAYDOL, :PSYCHIC, :SCORCHINGSANDS, :PROTECT, :TELEPORT, 0, 0],
  [:CRADILY, :STEALTHROCK, :RECOVER, :TOXIC, :GIGADRAIN, 0, 0],
  [:ARMALDO, :METALCLAW, :XSCISSOR, :STONEEDGE, :PROTECT, 0, 0],
  [:MILOTIC, :SCALD, :RECOVER, :ICEBEAM, :TOXIC, 0, 0],
  [:BANETTE, :DESTINYBOND, :SHADOWCLAW, :GUNKSHOT, :KNOCKOFF, 0, 0],
  [:TROPIUS, :LEECHSEED, :SUBSTITUTE, :AIRSLASH, :PROTECT, 0, 1],
  [:CHIMECHO, :HEALINGWISH, :RECOVER, :PSYCHIC, :THUNDERWAVE, 0, 0],
  [:ABSOL, :SWORDSDANCE, :KNOCKOFF, :SUCKERPUNCH, :PLAYROUGH, 0, 1],
  [:GLALIE, :HAIL, :CRUNCH, :BLIZZARD, :ICEBEAM, 0, 1],
  [:WALREIN, :SWORDSDANCE, :WATERFALL, :ICICLESPEAR, :EARTHQUAKE, 0, 0],
  [:HUNTAIL, :SHELLSMASH, :WATERFALL, :SUCKERPUNCH, :ICEBEAM, 0, 0],
  [:GOREBYSS, :SHELLSMASH, :HYDROPUMP, :ICEBEAM, :SUBSTITUTE, 0, 0],
  [:RELICANTH, :HEADSMASH, :WATERFALL, :EARTHQUAKE, :ZENHEADBUTT, 0, 1],
  [:SALAMENCE, :DRACOMETEOR, :HURRICANE, :FLAMETHROWER, :ROOST, 0, 0],
  [:METAGROSS, :STEALTHROCK, :METEORMASH, :EARTHQUAKE, :TOXIC, 0, 0],
  [:TORTERRA, :STEALTHROCK, :WOODHAMMER, :EARTHQUAKE, :SYNTHESIS, 0, 0],
  [:INFERNAPE, :NASTYPLOT, :FIREBLAST, :FOCUSBLAST, :FLAMETHROWER, 0, 0],
  [:EMPOLEON, :SCALD, :FLASHCANNON, :ICEBEAM, :PROTECT, 0, 0],
  [:STARAPTOR, :AERIALACE, :CLOSECOMBAT, :STEELWING, :DOUBLETEAM, 0, 0],
  [:BIBAREL, :WATERFALL, :BULLDOZE, :THUNDERWAVE, :YAWN, 0, 1],
  [:KRICKETUNE, :XSCISSOR, :NIGHTSLASH, :STICKYWEB, :AERIALACE, 0, 0],
  [:LUXRAY, :WILDCHARGE, :THUNDERFANG, :PSYCHICFANGS, :ROAR, 0, 1],
  [:ROSERADE, :GIGADRAIN, :TOXICSPIKES, :LEECHSEED, :GRASSYTERRAIN, 0, 1],
  [:RAMPARDOS, :ZENHEADBUTT, :STONEEDGE, :EARTHQUAKE, :AVALANCHE, 0, 0],
  [:BASTIODON, :IRONHEAD, :HEAVYSLAM, :STONEEDGE, :EARTHQUAKE, 0, 0],
  [:WORMADAM, :PSYCHIC, :BUGBUZZ, :PROTECT, :ENERGYBALL, 0, 0],
  [:WORMADAM, :PSYCHIC, :BUGBUZZ, :PROTECT, :EARTHPOWER, 1, 0],
  [:WORMADAM, :PSYCHIC, :BUGBUZZ, :PROTECT, :IRONHEAD, 2,  0],
  [:MOTHIM, :PSYCHIC, :BUGBUZZ, :PROTECT, :AIRSLASH, 0, 0],
  [:VESPIQUEN, :ATTACKORDER, :DEFENDORDER, :POWERGEM, :AIRSLASH, 0, 0],
  [:PACHIRISU, :SPARK, :THUNDERWAVE, :SUPERFANG, :LASTRESORT, 0, 0],
  [:FLOATZEL, :ICEFANG, :CRUNCH, :AQUATAIL, :AQUAJET, 0, 0],
  [:CHERRIM, :SUNNYDAY, :SOLARBEAM, :DAZZLINGGLEAM, :POLLENPUFF, 0, 0],
  [:GASTRODON, :MUDDYWATER, :WATERPULSE, :ANCIENTPOWER, :EARTHPOWER, 0, 1],
  [:AMBIPOM, :FAKEOUT, :RETURN, :LOWKICK, :UTURN, 0, 0],
  [:DRIFBLIM, :SHADOWBALL, :CALMMIND, :SUBSTITUTE, :THUNDERBOLT, 0, 1],
  [:LOPUNNY, :CLOSECOMBAT, :BOUNCE, :PLAYROUGH, :DRAINPUNCH, 0, 0],
  [:MISMAGIUS, :NASTYPLOT, :SHADOWBALL, :MYSTICALFIRE, :WILLOWISP, 0, 0],
  [:HONCHKROW, :NIGHTSLASH, :SUCKERPUNCH, :AERIALACE, :STEELWING, 0, 1],
  [:PURUGLY, :BODYSLAM, :AERIALACE, :PLAYROUGH, :SUBSTITUTE, 0, 0],
  [:SKUNTANK, :FLAMETHROWER, :THIEF, :SHADOWCLAW, :POISONJAB, 0, 0],
  [:BRONZONG, :STEALTHROCK, :TOXIC, :PSYWAVE, :GYROBALL, 0, 0],
  [:SPIRITOMB, :REST, :SLEEPTALK, :CALMMIND, :DARKPULSE, 0, 0],
  [:GARCHOMP, :SWORDSDANCE, :EARTHQUAKE, :FIREFANG, :SCALESHOT, 0, 0],
  [:LUCARIO, :CLOSECOMBAT, :METEORMASH, :SWORDSDANCE, :EXTREMESPEED, 0, 1],
  [:HIPPOWDON, :EARTHQUAKE, :TOXIC, :SLACKOFF, :THUNDERFANG, 0, 0],
  [:DRAPION, :SWORDSDANCE, :KNOCKOFF, :POISONJAB, :EARTHQUAKE, 0, 0],
  [:TOXICROAK, :SWORDSDANCE, :GUNKSHOT, :DRAINPUNCH, :KNOCKOFF, 0, 1],
  [:CARNIVINE, :POWERWHIP, :SEEDBOMB, :CRUNCH, :PROTECT, 0, 0],
  [:LUMINEON, :DEFOG, :SCALD, :UTURN, :TOXIC, 0, 1],
  [:ABOMASNOW, :SWORDSDANCE, :ICESHARD, :WOODHAMMER, :EARTHQUAKE, 0, 0],
  [:WEAVILE, :SWORDSDANCE, :TRIPLEAXEL, :KNOCKOFF, :ICESHARD, 0, 0],
  [:MAGNEZONE, :IRONDEFENSE, :BODYPRESS, :THUNDERBOLT, :TELEPORT, 0, 1],
  [:LICKILICKY, :WISH, :PROTECT, :HEALBELL, :KNOCKOFF, 0, 1],
  [:RHYPERIOR, :EARTHQUAKE, :STONEEDGE, :STEALTHROCK, :MEGAHORN, 0, 1],
  [:TANGROWTH, :POWERWHIP, :KNOCKOFF, :SLUDGEBOMB, :FOCUSBLAST, 0, 1],
  [:ELECTIVIRE, :THUNDERBOLT, :FLAMETHROWER, :FOCUSBLAST, :VOLTSWITCH, 0, 0],
  [:MAGMORTAR, :FIREBLAST, :THUNDERBOLT, :FOCUSBLAST, :SCORCHINGSANDS, 0, 0],
  [:TOGEKISS, :ANCIENTPOWER, :AIRSLASH, :DAZZLINGGLEAM, :AURASPHERE, 0, 1],
  [:YANMEGA, :BUGBUZZ, :AIRSLASH, :UTURN, :GIGADRAIN, 0, 0],
  [:LEAFEON, :SWORDSDANCE, :LEAFBLADE, :KNOCKOFF, :SYNTHESIS, 0, 0],
  [:GLACEON, :ICEBEAM, :FREEZEDRY, :SHADOWBALL, :WATERPULSE, 0, 0],
  [:GLISCOR, :EARTHQUAKE, :SWORDSDANCE, :XSCISSOR, :POISONJAB, 0, 0],
  [:MAMOSWINE, :ICICLECRASH, :EARTHQUAKE, :ICESHARD, :KNOCKOFF, 0, 0],
  [:PORYGONZ, :TRIATTACK, :SHADOWBALL, :TRICK, :THUNDERBOLT, 0, 0],
  [:GALLADE, :SWORDSDANCE, :CLOSECOMBAT, :ZENHEADBUTT, :KNOCKOFF, 0, 0],
  [:PROBOPASS, :POWERGEM, :DISCHARGE, :EARTHPOWER, :THUNDERWAVE, 0, 0],
  [:DUSKNOIR, :POLTERGEIST, :EARTHQUAKE, :SHADOWSNEAK, :POWERUPPUNCH, 0, 0],
  [:FROSLASS, :HAIL, :SHADOWBALL, :FROSTBREATH, :WILLOWISP, 0, 0],
  [:ROTOM, :VOLTSWITCH, :SHADOWBALL, :WILLOWISP, :THUNDERBOLT, 0, 0],
  [:ROTOM, :OVERHEAT, :VOLTSWITCH, :TOXIC, :PAINSPLIT, 1, 0],
  [:ROTOM, :VOLTSWITCH, :HYDROPUMP, :PAINSPLIT, :WILLOWISP, 2,  0],
  [:ROTOM, :NASTYPLOT, :BLIZZARD, :THUNDERBOLT, :PAINSPLIT, 3,  0],
  [:ROTOM, :NASTYPLOT, :THUNDERBOLT, :AIRSLASH, :PAINSPLIT, 4,  0],
  [:ROTOM, :NASTYPLOT, :LEAFSTORM, :VOLTSWITCH, :PAINSPLIT, 5,  0],
  [:SERPERIOR, :LEAFSTORM, :SUBSTITUTE, :GLARE, :TOXIC, 0, 0],
  [:EMBOAR, :HAMMERARM, :FLAREBLITZ, :ASSURANCE, :STONEEDGE, 0, 0],
  [:SAMUROTT, :AQUATAIL, :SWORDSDANCE, :AQUAJET, :DRAGONTAIL, 0, 0],
  [:WATCHOG, :HYPERFANG, :HYPNOSIS, :NASTYPLOT, :BATONPASS, 0, 1],
  [:STOUTLAND, :PLAYROUGH, :DIG, :IRONHEAD, :CRUNCH, 0, 0],
  [:LIEPARD, :NIGHTSLASH, :SUCKERPUNCH, :PLAYROUGH, :SHADOWCLAW, 0, 1],
  [:SIMISAGE, :LEAFSTORM, :SUPERPOWER, :ROCKSLIDE, :GUNKSHOT, 0, 0],
  [:SIMISEAR, :NASTYPLOT, :FIREBLAST, :GRASSKNOT, :FOCUSBLAST, 0, 0],
  [:SIMIPOUR, :NASTYPLOT, :HYDROPUMP, :ICEBEAM, :GRASSKNOT, 0, 0],
  [:MUSHARNA, :FUTURESIGHT, :MOONBLAST, :MOONLIGHT, :HYPNOSIS, 0, 1],
  [:UNFEZANT, :SKYATTACK, :GIGAIMPACT, :BRAVEBIRD, :REST, 0, 1],
  [:ZEBSTRIKA, :THUNDERBOLT, :VOLTSWITCH, :OVERHEAT, :HIDDENPOWER, 0, 1],
  [:GIGALITH, :STEALTHROCK, :STONEEDGE, :EARTHQUAKE, :TOXIC, 0, 1],
  [:SWOOBAT, :PSYCHIC, :AIRSLASH, :STOREDPOWER, :HEATWAVE, 0, 1],
  [:EXCADRILL, :EARTHQUAKE, :IRONHEAD, :RAPIDSPIN, :TOXIC, 0, 0],
  [:AUDINO, :WISH, :PROTECT, :KNOCKOFF, :ENCORE, 0, 0],
  [:CONKELDURR, :DRAINPUNCH, :FACADE, :KNOCKOFF, :MACHPUNCH, 0, 0],
  [:SEISMITOAD, :DRAINPUNCH, :LIQUIDATION, :ROCKSLIDE, :SUPERSONIC, 0, 1],
  [:THROH, :SUPERPOWER, :EARTHQUAKE, :KNOCKOFF, :POISONJAB, 0, 0],
  [:SAWK, :CLOSECOMBAT, :KNOCKOFF, :POISONJAB, :EARTHQUAKE, 0, 0],
  [:LEAVANNY, :STICKYWEB, :LEAFBLADE, :XSCISSOR, :MAGICCOAT, 0, 1],
  [:SCOLIPEDE, :MEGAHORN, :TOXIC, :CROSSPOISON, :XSCISSOR, 0, 1],
  [:WHIMSICOTT, :MOONBLAST, :SUNNYDAY, :SOLARBEAM, :ENERGYBALL, 0, 1],
  [:LILLIGANT, :ENERGYBALL, :SYNTHESIS, :PETALDANCE, :QUIVERDANCE, 0, 1],
  [:KROOKODILE, :EARTHQUAKE, :KNOCKOFF, :STEALTHROCK, :TAUNT, 0, 1],
  [:DARMANITAN, :FLAREBLITZ, :UTURN, :ROCKSLIDE, :EARTHQUAKE, 0, 0],
  [:DARMANITAN, :UTURN, :ICICLECRASH, :FLAREBLITZ, :ROCKSLIDE, 2, 0],
  [:MARACTUS, :SPIKES, :ENDEAVOR, :ENERGYBALL, :SUCKERPUNCH, 0, 1],
  [:CRUSTLE, :XSCISSOR, :STEALTHROCK, :SHELLSMASH, :ROCKSLIDE, 0, 1],
  [:SCRAFTY, :DRAGONDANCE, :CLOSECOMBAT, :KNOCKOFF, :IRONHEAD, 0, 1],
  [:SIGILYPH, :CALMMIND, :AIRSLASH, :ROOST, :PSYCHICH, 0, 0],
  [:COFAGRIGUS, :IRONDEFENSE, :BODYPRESS, :SHADOWBALL, :REST, 0, 0],
  [:CARRACOSTA, :SHELLSMASH, :STONEEDGE, :AQUAJET, :LIQUIDATION, 0, 1],
  [:ARCHEOPS, :STONEEDGE, :EARTHQUAKE, :DUALWINGBEAT, :ROOST, 0, 0],
  [:GARBODOR, :GUNKSHOT, :SPIKES, :STOMPINGTANTRUM, :PAINSPLIT, 0, 0],
  [:ZOROARK, :DARKPULSE, :FLAMETHROWER, :SLUDGEBOMB, :UTURN, 0, 0],
  [:CINCCINO, :TAILSLAP, :TRIPLEAXEL, :BULLETSEED, :KNOCKOFF, 0, 1],
  [:GOTHITELLE, :PSYCHIC, :CHARM, :SHADOWBALL, :THUNDERBOLT, 0, 0],
  [:REUNICLUS, :CALMMIND, :PSYSHOCK, :FOCUSBLAST, :RECOVER, 0, 0],
  [:SWANNA, :AERIALACE, :HURRICANE, :WATERPULSE, :ICEBEAM, 0, 0],
  [:VANILLUXE, :BLIZZARD, :FREEZEDRY, :ICESHARD, :TAUNT, 0, 1],
  [:SAWSBUCK, :MEGAHORN, :HORNLEECH, :JUMPKICK, :LEECHSEED, 0, 0],
  [:EMOLGA, :THUNDERBOLT, :UTURN, :ENCORE, :ROOST, 0, 0],
  [:ESCAVALIER, :IRONHEAD, :SWORDSDANCE, :XSCISSOR, :BRUTALSWING, 0, 1],
  [:AMOONGUSS, :GIGADRAIN, :SLUDGEBOMB, :FOULPLAY, :SPORE, 0, 0],
  [:JELLICENT, :WATERSPOUT, :SHADOWBALL, :TRICK, :SURF, 0, 0],
  [:ALOMOMOLA, :SCALD, :WISH, :PROTECT, :RAINDANCE, 0, 1],
  [:GALVANTULA, :BUGBUZZ, :ELECTROBALL, :DISCHARGE, :STICKYWEB, 0, 0],
  [:FERROTHORN, :SPIKES, :KNOCKOFF, :LEECHSEED, :POWERWHIP, 0, 1],
  [:KLINKLANG, :SHIFTGEAR, :GEARGRIND, :WILDCHARGE, :SUBSTITUTE, 0, 0],
  [:EELEKTROSS, :VOLTSWITCH, :GIGADRAIN, :FLAMETHROWER, :DRAINPUNCH, 0, 0],
  [:BEHEEYEM, :PSYCHIC, :THUNDERBOLT, :RECOVER, :NASTYPLOT, 0, 1],
  [:CHANDELURE, :FIREBLAST, :SHADOWBALL, :TOXIC, :ENERGYBALL, 0, 1],
  [:HAXORUS, :SWORDSDANCE, :OUTRAGE, :EARTHQUAKE, :POISONJAB, 0, 0],
  [:BEARTIC, :HAIL, :SWORDSDANCE, :ICICLECRASH, :SUPERPOWER, 0, 0],
  [:CRYOGONAL, :RAPIDSPIN, :RECOVER, :FREEZEDRY, :KNOCKOFF, 0, 0],
  [:ACCELGOR, :BUGBUZZ, :TOXIC, :WATERSHURIKEN, :GIGADRAIN, 0, 1],
  [:STUNFISK, :STEALTHROCK, :DISCHARGE, :EARTHPOWER, :REST, 0, 1],
  [:STUNFISK, :STEALTHROCK, :EARTHQUAKE, :YAWN, :METALCLAW, 1, 0],
  [:MIENSHAO, :HIGHJUMPKICK, :KNOCKOFF, :UTURN, :FAKEOUT, 0, 1],
  [:DRUDDIGON, :DRAGONTAIL, :EARTHQUAKE, :GLARE, :TAUNT, 0, 1],
  [:GOLURK, :STEALTHROCK, :EARTHQUAKE, :SHADOWPUNCH, :ICEPUNCH, 0, 0],
  [:BISHARP, :IRONHEAD, :KNOCKOFF, :SUCKERPUNCH, :SWORDSDANCE, 0, 0],
  [:BOUFFALANT, :SUBSTITUTE, :SWORDSDANCE, :BODYSLAM, :THROATCHOP, 0, 1],
  [:BRAVIARY, :SUBSTITUTE, :BULKUP, :BRAVEBIRD, :ROOST, 0, 0],
  [:MANDIBUZZ, :FOULPLAY, :DEFOG, :UTURN, :ROOST, 0, 1],
  [:HEATMOR, :FIREBLAST, :GIGADRAIN, :FOCUSBLAST, :SCORCHINGSANDS, 0, 0],
  [:DURANT, :FIRSTIMPRESSION, :SUPERPOWER, :ROCKSLIDE, :IRONHEAD, 0, 0],
  [:HYDREIGON, :DRACOMETEOR, :DARKPULSE, :FLAMETHROWER, :ROOST, 0, 1],
  [:VOLCARONA, :QUIVERDANCE, :FLAMETHROWER, :BUGBUZZ, :PSYCHIC, 0, 0],
  [:CHESNAUGHT, :WOODHAMMER, :DRAINPUNCH, :SYNTHESIS, :SPIKEYSHIELD, 0, 0],
  [:DELPHOX, :CALMMIND, :FIREBLAST, :PSYCHIC, :GRASSKNOT, 0, 0],
  [:GRENINJA, :HYDROPUMP, :DARKPULSE, :WATERSHURIKEN, :SPIKES, 0, 0],
  [:DIGGERSBY, :EARTHQUAKE, :HAMMERARM, :SWORDSDANCE, :BOUNCE, 0, 0],
  [:TALONFLAME, :AERIALACE, :FLAMECHARGE, :ACROBATICS, :FLAREBLITZ, 0, 0],
  [:VIVILLON, :DRAININGKISS, :LIGHTSCREEN, :SUPERSONIC, :BUGBUZZ, 0, 0],
  [:PYROAR, :FLAMETHROWER, :HYPERVOICE, :DARKPULSE, :WILLOWISP, 0, 0],
  [:FLORGES, :MISTYTERRAIN, :MOONBLAST, :GRASSKNOT, :HIDDENPOWER, 0, 0],
  [:GOGOAT, :BULKUP, :HORNLEECH, :EARTHQUAKE, :ROCKSLIDE, 0, 0],
  [:PANGORO, :KNOCKOFF, :CLOSECOMBAT, :IRONHEAD, :DRAINPUNCH, 0, 0],
  [:FURFROU, :UTURN, :THUNDERWAVE, :SUCKERPUNCH, :CHARM, 0, 0],
  [:MEOWSTIC, :REFLECT, :LIGHTSCREEN, :THUNDERWAVE, :PSYCHIC, 0, 0],
  [:AEGISLASH, :SHADOWBALL, :FLASHCANNON, :CLOSECOMBAT, :KINGSSHIELD, 0, 0],
  [:AROMATISSE, :MOONBLAST, :WISH, :PROTECT, :HEALBELL, 0, 0],
  [:SLURPUFF, :STICKYWEB, :MAGICCOAT, :MOONBLAST, :YAWN, 0, 0],
  [:MALAMAR, :SUPERPOWER, :KNOCKOFF, :REST, :SLEEPTALK, 0, 0],
  [:BARBARACLE, :SHELLSMASH, :LIQUIDATION, :STONEEDGE, :GRASSKNOT, 0, 0],
  [:DRAGALGE, :DRACOMETEOR, :SLUDGEBOMB, :FLIPTURN, :SCALD, 0, 0],
  [:CLAWITZER, :WATERPULSE, :ICEBEAM, :DARKPULSE, :AURASPHERE, 0, 0],
  [:HELIOLISK, :THUNDERBOLT, :HYPERVOICE, :VOLTSWITCH, :DARKPULSE, 0, 0],
  [:TYRANTRUM, :HEADSMASH, :OUTRAGE, :CLOSECOMBAT, :DRAGONCLAW, 0, 0],
  [:AURORUS, :ICEBEAM, :ANCIENTPOWER, :EARTHPOWER, :BLIZZARD, 0, 0],
  [:SYLVEON, :MOONBLAST, :PSYSHOCK, :MISTYTERRAIN, :MYSTICALFIRE, 0, 0],
  [:HAWLUCHA, :FLYINGPRESS, :SUBMISSION, :ROCKTOMB, :POISONJAB, 0, 1],
  [:DEDENNE, :THUNDER, :PARABOLICCHARGE, :DAZZLINGGLEAM, :ELECTROWEB, 0, 0],
  [:CARBINK, :STEALTHROCK, :MOONBLAST, :PROTECT, :BODYPRESS, 0, 0],
  [:GOODRA, :DRACOMETEOR, :THUNDERBOLT, :FIREBLAST, :EARTHQUAKE, 0, 0],
  [:KLEFKI, :SPIKES, :DAZZLINGGLEAM, :THUNDERWAVE, :TOXIC, 0, 0],
  [:TREVENANT, :POLTERGEIST, :WOODHAMMER, :HORNLEECH, :EARTHQUAKE, 0, 0],
  [:GOURGEIST, :POWERWHIP, :POLTERGEIST, :SHADOWSNEAK, :FIREBLAST, 0, 1],
  [:AVALUGG, :AVALANCHE, :HAIL, :EARTHQUAKE, :STONEEDGE, 0, 1],
  [:NOIVERN, :DRACOMETEOR, :FLAMETHROWER, :ROOST, :UTURN, 0, 1],
  [:DECIDUEYE, :POLTERGEIST, :LEAFBLADE, :UTURN, :SHADOWSNEAK, 0, 0],
  [:INCINEROAR, :DARKESTLARIET, :OVERHEAT, :SWORDSDANCE, :BRICKBREAK, 0, 0],
  [:PRIMARINA, :SPARKLINGARIA, :MOONBLAST, :MISTYTERRAIN, :REFLECT, 0, 0],
  [:TOUCANNON, :BEAKBLAST, :ROCKBLAST, :BULLETSEED, :PLUCK, 0, 1],
  [:GUMSHOOS, :HYPERFANG, :CRUNCH, :BULLDOZE, :SUBSTITUTE, 0, 1],
  [:VIKAVOLT, :ZAPCANNON, :THUNDERBOLT, :BUGBUZZ, :FLASHCANNON, 0, 0],
  [:CRABOMINABLE, :DRAINPUNCH, :ICEHAMMER, :EARTHQUAKE, :THUNDERPUNCH, 0, 1],
  [:RIBOMBEE, :POLLENPUFF, :MOONBLAST, :QUIVERDANCE, :STICKYWEB, 0, 1],
  [:WISHIWASHI, :LIQUIDATION, :EARTHQUAKE, :ICEBEAM, :ENDURE, 0, 0],
  [:LYCANROC, :ACCELEROCK, :STONEEDGE, :CRUNCH, :THUNDERFANG, 0, 0],
  [:LYCANROC, :STONEEDGE, :STEALTHROCK, :ROCKSLIDE, :CRUNCH, 2,  0],
  [:LYCANROC, :SWORDSDANCE, :STONEEDGE, :CLOSECOMBAT, :SUCKERPUNCH, 1, 0],
  [:TOXAPEX, :TOXIC, :TOXICSPIKES, :RECOVER, :SCALD, 0, 0],
  [:MUDSDALE, :STEALTHROCK, :EARTHQUAKE, :BODYPRESS, :SMACKDOWN, 0, 1],
  [:ARAQUANID, :LEECHLIFE, :LIQUIDATION, :CRUNCH, :RAINDANCE, 0, 0],
  [:LURANTIS, :LEAFSTORM, :SUPERPOWER, :SYNTHESIS, :SUNNYDAY, 0, 0],
  [:SHIINOTIC, :SPORE, :STRENGTHSAP, :GIGADRAIN, :MOONBLAST, 0, 1],
  [:SALAZZLE, :TOXIC, :SLUDGEWAVE, :FLAMETHROWER, :DRAGONPULSE, 0, 0],
  [:BEWEAR, :SWORDSDANCE, :DOUBLEEDGE, :DRAINPUNCH, :DARKESTLARIAT, 0, 0],
  [:TSAREENA, :TROPKICK, :POWERWHIP, :HIGHJUMPKICK, :UURN, 0, 1],
  [:COMFEY, :SYNTHESIS, :DAZZLINGGLEAM, :LEECHSEED, :CALMMIND, 0, 1],
  [:ORANGURU, :PSYCHIC, :THUNDERBOLT, :NASTYPLOT, :TRICKROOM, 0, 0],
  [:PASSIMIAN, :CLOSECOMBAT, :KNOCKOFF, :GUNKSHOT, :ROCKSLIDE, 0, 0],
  [:GOLISOPOD, :LIQUIDATION, :FIRSTIMPRESSION, :SUCKERPUNCH, :XSCISSOR, 0, 0],
  [:PALOSSAND, :EARTHPOWER, :SHADOWBALL, :SHOREUP, :STEALTHROCK, 0, 0],
  [:PYUKUMUKU, :COUNTER, :TOXIC, :PROTECT, :SOAK, 0, 0],
  [:SILVALLY, :MULTIATTACK, :CRUNCH, :FLAMETHROWER, :SURF, 0, 0],
  [:ORICORIO, :CALMMIND, :HURRICANE, :REVELATIONDANCE, :ROOST, 2,  0],
  [:ORICORIO, :CALMMIND, :HURRICANE, :REVELATIONDANCE, :ROOST, 3,  0],
  [:ORICORIO, :CALMMIND, :HURRICANE, :REVELATIONDANCE, :ROOST, 0, 0],
  [:ORICORIO, :CALMMIND, :HURRICANE, :REVELATIONDANCE, :ROOST, 1, 0],
  [:MINIOR, :SHELLSMASH, :STONEEDGE, :EARTHQUAKE, :ACROBATICS, 0, 0],
  [:KOMALA, :WOODHAMMER, :THRASH, :ROLLOUT, :RAPIDSPIN, 0, 0],
  [:TURTONATOR, :SHELLSMASH, :FIREBLAST, :DRACOMETEOR, :DRAGONPULSE, 0, 0],
  [:TOGEDEMARU, :ZINGZAP, :IRONHEAD, :NUZZLE, :UTURN, 0, 1],
  [:MIMIKYU, :SWORDSDANCE, :PLAYROUGH, :SHADOWSNEAK, :SHADOWCLAW, 0, 0],
  [:BRUXISH, :SWORDSDANCE, :PSYCHICFANGS, :AQUAJET, :CRUNCH, 0, 1],
  [:DRAMPA, :HYPERVOICE, :DRACOMETEOR, :FLAMETHROWER, :ENERGYBALL, 0, 1],
  [:DHELMISE, :ANCHORSHOT, :POWERWHIP, :POLTERGEIST, :SYNTHESIS, 0, 0],
  [:KOMMOO, :BODYPRESS, :EARTHQUAKE, :FLAMETHROWER, :CLANGINGSCALES, 0, 0],
  [:RILLABOOM, :SWORDSDANCE, :DRUMBEATING, :EARTHQUAKE, :SUPERPOWER, 0, 0],
  [:CINDERACE, :PYROBALL, :COURTCHANGE, :ZENHEADBUTT, :GUNKSHOT, 0, 0],
  [:INTELEON, :SNIPESHOT, :ICEBEAM, :AIRSLASH, :AQUARING, 0, 0],
  [:GREEDENT, :STUFFCHEEKS, :STOCKPILE, :SPITUP, :BELCH, 0, 0],
  [:CORVIKNIGHT, :IRONHEAD, :DRILLPECK, :PROTECT, :BODYPRESS, 0, 0],
  [:ORBEETLE, :PSYCHIC, :BUGBUZZ, :REFLECT, :LIGHTSCREEN, 0, 0],
  [:THIEVUL, :NIGHTSLASH, :FOULPLAY, :PLAYROUGH, :DIG, 0, 1],
  [:ELDEGOSS, :LEAFSTORM, :LEAFTORNADO, :POLLENPUFF, :SING, 0, 0],
  [:DUBWOOL, :COTTONGUARD, :BODYPRESS, :REST, :PAYBACK, 0, 0],
  [:DREDNAW, :LIQUIDATION, :ROCKTOMB, :JAWLOCK, :CRUNCH, 0, 0],
  [:BOLTUND, :THUNDERFANG, :FIREFANG, :PLAYROUGH, :PSYCHICFANGS, 0, 0],
  [:COALOSSAL, :ANCIENTPOWER, :HEATCRASH, :BURNUP, :ROCKBLAST, 0, 0],
  [:FLAPPLE, :GRAVAPPLE, :OUTRAGE, :GRASSYGLIDE, :SUCKERPUNCH, 0, 0],
  [:APPLETUN, :DRACOMETEOR, :APPLEACID, :DRAGONPULSE, :GIGADRAIN, 0, 0],
  [:SANDACONDA, :STEALTHROCK, :EARTHQUAKE, :GLARE, :REST, 0, 1],
  [:CRAMORANT, :ROOST, :SURF, :HURRICANE, :SUBSTITUTE, 0, 0],
  [:BARRASKEWDA, :LIQUIDATION, :CLOSECOMBAT, :FLIPTURN, :PSYCHICFANGS, 0, 0],
  [:TOXTRICITY, :BOOMBURST, :OVERDRIVE, :SNARL, :SLUDGEWAVE, 0, 0],
  [:CENTISKORCH, :FIRELASH, :LUNGE, :CRUNCH, :POWERWHIP, 0, 1],
  [:GRAPPLOCT, :BULKUP, :DRAINPUNCH, :BRUTALSWING, :SUCKERPUNCH, 0, 0],
  [:POLTEAGEIST, :SHELLSMASH, :SHADOWBALL, :GIGADRAIN, :POLTERGEIST, 0, 0],
  [:HATTERENE, :PSYCHIC, :DAZZLINGGLEAM, :CALMMIND, :SHADOWBALL, 0, 1],
  [:GRIMMSNARL, :PLAYROUGH, :FOULPLAY, :SPIRITBREAK, :FALSESURRENDER, 0, 0],
  [:OBSTAGOON, :FACADE, :KNOCKOFF, :REST, :SLEEPTALK, 0, 1],
  [:PERRSERKER, :SWORDSDANCE, :IRONHEAD, :SEEDBOMB, :SUBSTITUTE, 0, 1],
  [:CURSOLA, :SHADOWBALL, :METEORBEAM, :BURNINGJEALOUSY, :ENDURE, 0, 0],
  [:SIRFETCHD, :CLOSECOMBAT, :KNOCKOFF, :FIRSTIMPRESSION, :POISONJAB, 0, 0],
  [:MRRIME, :RAPIDSPIN, :ICEBEAM, :PSYCHIC, :FOCUSBLAST, 0, 1],
  [:RUNERIGUS, :STEALTHROCK, :EARTHQUAKE, :WILLOWISP, :POLTERGEIST, 0, 0],
  [:ALCREMIE, :DAZZLINGGLEAM, :ENERGYBALL, :MYSTICALFIRE, :LIGHTSCREEN, 0, 0],
  [:FALINKS, :SWORDSDANCE, :CLOSECOMBAT, :THROATCHOP, :ZENHEADBUTT, 0, 0],
  [:PINCURCHIN, :DISCHARGE, :SCALD, :TOXICSPIKES, :RECOVER, 0, 0],
  [:FROSMOTH, :ICEBEAM, :BUGBUZZ, :STUNSPORE, :TAILWIND, 0, 0],
  [:STONJOURNER, :STONEEDGE, :HEATCRASH, :EARTHQUAKE, :ROCKSLIDE, 0, 0],
  [:EISCUE, :BELLYDRUM, :ICICLECRASH, :ZENHEADBUTT, :SUBSTITUTE, 0, 0],
  [:INDEEDEE, :EXPANDINGFORCE, :MYSTICALFIRE, :HYPERVOICE, :DAZZLINGGLEAM, 0, 1],
  [:MORPEKO, :AURAWHEEL, :PARTINGSHOT, :SUPERFANG, :PROTECT, 0, 0],
  [:COPPERAJAH, :HEAVYSLAM, :POWERWHIP, :STONEEDGE, :HEATCRASH, 0, 0],
  [:DRACOZOLT, :BOLTBEAK, :DRACOMETEOR, :SUBSTITUTE, :FIRESPIN, 0, 0],
  [:ARCTOZOLT, :SUBSTITUTE, :BOLTBEAK, :BLIZZARD, :LOWKICK, 0, 1],
  [:DRACOVISH, :FISHIOUSREND, :PSYCHICFANGS, :CRUNCH, :OUTRAGE, 0, 1],
  [:ARCTOVISH, :FISHIOUSREND, :FREEZEDRY, :ICICLECRASH, :PROTECT, 0, 0],
  [:DURALUDON, :DRACOMETEOR, :FLASHCANNON, :BODYPRESS, :THUNDERBOLT, 0, 0],
  [:DRAGAPULT, :SHADOWBALL, :DRACOMETEOR, :FLAMETHROWER, :HYDROPUMP, 0, 1]
]

$allstats = [:HP, :ATTACK, :DEFENSE, :SPECIAL_ATTACK, :SPECIAL_DEFENSE, :SPEED]

$bracketnames = ["Kanto Leaders", "Johto Leaders", "Hoenn Leaders", "Sinnoh Leaders", "Unova Leaders", "Kalos Leaders", "Alola Captains", "Galar Leaders"]

def pbSummitSelectPokemon
  num = rand(0...($allpkmn.length))
  pkmn = $allpkmn[num]
  pbSummitMakePokemon(pkmn[0], pkmn[5])
  specform = pkmn[0].clone.to_s
  if pkmn[5] != 0
    specform << "_" << pkmn[5].to_s
  end
  return pkmn[0], pkmn[5], specform
end

def pbSummitMakePokemon(species, form)
  specform = species.clone.to_s
  if form != 0
    specform << "_" << form.to_s
  end
  @givepkmn = Pokemon.new(specform, 50)
  for stat in $allstats
    @givepkmn.iv[stat] = 31
  end
  @givepkmn.happiness = 255
  @givepkmn.cannot_release = true

  for n in $allpkmn
    if [n[0], n[5]] == [species, form]
      pkmninfo = n
      break
    end
  end
  pokeMoves = [pkmninfo[1], pkmninfo[2], pkmninfo[3], pkmninfo[4]]
  for move in pokeMoves
    @givepkmn.learn_move(move)
  end
  @givepkmn.ability_index = pkmninfo[6]
  return @givepkmn
end

def pbSummitGivePokemon(species, form)
  pbSummitMakePokemon(species, form)
  pbAddPokemonSilent(@givepkmn)
end

def pbSummitVendingPokemon
  loop do
    pkmn = pbSummitSelectPokemon
    species = pkmn[0].to_sym
    if $player.owned?(species) # obtained
      return false
      break
    else
      pbShowPokemonSprite(@givepkmn)
      pbSummitGivePokemon(pkmn[0], pkmn[1])
      return true
    end
    break
  end
end

def pbSummitBracketSelection(group)
  trainerSelection = []

  case group
    when 0 # Kanto Leaders
      trainerlist = [
        ["LEADER_Brock","Brock",0],
        ["LEADER_Misty","Misty",0],
        ["LEADER_Surge","Lt. Surge",0],
        ["LEADER_Erika","Erika",0],
        ["LEADER_Janine","Janine",0],
        ["LEADER_Sabrina","Sabrina",0],
        ["LEADER_Blaine","Blaine",0],
        ["LEADER_Giovanni","Giovanni",0]
      ]
    when 1 # Johto Leaders
          trainerlist = [
            ["LEADER_Falkner","Falkner",0],
            ["LEADER_Bugsy","Bugsy",0],
            ["LEADER_Morty","Morty",0],
            ["LEADER_Whitney","Whitney",0],
            ["LEADER_Chuck","Chuck",0],
            ["LEADER_Jasmine","Jasmine",0],
            ["LEADER_Pryce","Pryce",0],
            ["LEADER_Clair","Clair",0]
          ]
    when 2 # Hoenn Leaders
          trainerlist = [
            ["LEADER_Roxanne","Roxanne",0],
            ["LEADER_Brawly","Brawly",0],
            ["LEADER_Wattson","Wattson",0],
            ["LEADER_Flannery","Flannery",0],
            ["LEADER_Norman","Norman",0],
            ["LEADER_Winona","Winona",0],
            ["LEADER_Tate","Tate",0],
            ["LEADER_Liza","Liza",0],
            ["LEADER_Juan","Juan",0]
          ]
        
    when 3 # Sinnoh Leaders
          trainerlist = [
            ["LEADER_Roark","Roark",0],
            ["LEADER_Gardenia","Gardenia",0],
            ["LEADER_Maylene","Maylene",0],
            ["LEADER_Wake","Crasher Wake",0],
            ["LEADER_Fantina","Fantina",0],
            ["LEADER_Byron","Byron",0],
            ["LEADER_Candice","Candice",0],
            ["LEADER_Volkner","Volkner",0]
          ]
        
    when 4 # Unova Leaders
          trainerlist = [
            ["LEADER_Cilan","Cilan",0],
            ["LEADER_Chili","Chili",0],
            ["LEADER_Cress","Cress",0],
            ["LEADER_Lenora","Lenora",0],
            ["LEADER_Burgh","Burgh",0],
            ["LEADER_Elesa","Elesa",0],
            ["LEADER_Clay","Clay",0],
            ["LEADER_Skyla","Skyla",0],
            ["LEADER_Drayden","Drayden",0],
            ["LEADER_Cheren","Cheren",0],
            ["LEADER_Roxie","Roxie",0],
            ["LEADER_Marlon","Marlon",0],
            ["LEADER_Brycen","Brycen",0]
          ]
        
    when 5 # Kalos Leaders
          trainerlist = [
            ["LEADER_Viola","Viola",0],
            ["LEADER_Grant","Grant",0],
            ["LEADER_Korrina","Korrina",0],
            ["LEADER_Ramos","Ramos",0],
            ["LEADER_Clemont","Clemont",0],
            ["LEADER_Valerie","Valerie",0],
            ["LEADER_Olympia","Olympia",0],
            ["LEADER_Wulfric","Wulfric",0]
          ]
        
    when 6 # Alola Captains
          trainerlist = [
            ["CAPTAIN_Ilima","Ilima",0],
            ["CAPTAIN_Mallow","Mallow",0],
            ["CAPTAIN_Lana","Lana",0],
            ["CAPTAIN_Kiawe","Kiawe",0],
            ["CAPTAIN_Sophocles","Sophocles",0],
            ["CAPTAIN_Acerola","Acerola",0],
            ["CAPTAIN_Mina","Mina",0]
          ]
        
    when 7 # Galar Leaders
          trainerlist = [
            ["LEADER_Milo","Milo",0],
            ["LEADER_Nessa","Nessa",0],
            ["LEADER_Kabu","Kabu",0],
            ["LEADER_Bea","Bea",0],
            ["LEADER_Allister","Allister",0],
            ["LEADER_Opal","Opal",0],
            ["LEADER_Gordie","Gordie",0],
            ["LEADER_Melony","Melony",0],
            ["LEADER_Piers","Piers",0],
            ["LEADER_Raihan","Raihan",0]
          ]
  end

  for i in 0..4
    loop do
      num = rand(0...(trainerlist.length))
      trainer = trainerlist[num]
      if !trainerSelection.include?(trainer)
        if group == 4
          if trainer[0] == ("LEADER_Lenora")
            trainerSelection.push(trainer) if !trainerSelection.include?("LEADER_Cheren")
            break
          elsif trainer[0] == ("LEADER_Cheren")
            trainerSelection.push(trainer) if !trainerSelection.include?("LEADER_Lenora")
            break
          elsif trainer[0] == ("LEADER_Cress")
            trainerSelection.push(trainer) if !trainerSelection.include?("LEADER_Marlon")
            break
          elsif trainer[0] == ("LEADER_Marlon")
            trainerSelection.push(trainer) if !trainerSelection.include?("LEADER_Cress")
            break
          end
        trainerSelection.push(trainer)
        break
        end
      end
    end
  end

  $game_variables[29] = trainerSelection
end

def pbSummitBracketAnnounce
  bracket = $bracketnames[$game_variables[31]]
  pbMessage(_INTL("\\rYou will be facing the {1} bracket.",bracket))
end

def pbSummitPrepMainTrainer(bracket)
  trainers = $game_variables[29]
  if $game_variables[35] == 1
    fightnum = $game_variables[33]
    opponent = trainers[fightnum]
  else
    opponent = trainers.sample
  end
  $game_variables[30] = opponent
  case bracket
  when 0, 1 # Kanto and Johto Leaders
    $game_map.events[1].character_name = "trainer_Sheet2"
    case opponent[0].downcase
    when "leader_brock"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 0
    when "leader_misty"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 1
    when "leader_surge"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 2
    when "leader_erika"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 3
    when "leader_janine"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 0
    when "leader_sabrina"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 1
    when "leader_blaine"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 2
    when "leader_giovanni"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 3
    when "leader_falkner"
      $game_map.events[1].direction = 6
      $game_map.events[1].pattern = 0
    when "leader_bugsy"
      $game_map.events[1].direction = 6
      $game_map.events[1].pattern = 1
    when "leader_whitney"
      $game_map.events[1].direction = 6
      $game_map.events[1].pattern = 2
    when "leader_morty"
      $game_map.events[1].direction = 6
      $game_map.events[1].pattern = 3
    when "leader_chuck"
      $game_map.events[1].direction = 8
      $game_map.events[1].pattern = 0
    when "leader_jasmine"
      $game_map.events[1].direction = 8
      $game_map.events[1].pattern = 1
    when "leader_pryce"
      $game_map.events[1].direction = 8
      $game_map.events[1].pattern = 2
    when "leader_clair"
      $game_map.events[1].direction = 8
      $game_map.events[1].pattern = 3
    end
  when 2 # Hoenn Leaders, add || num for Elite Hoenn
    $game_map.events[1].character_name = "trainer_Sheet3"
    case opponent[0].downcase
    when "leader_roxanne"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 0
    when "leader_brawly"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 1
    when "leader_wattson"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 2
    when "leader_flannery"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 3
    when "leader_norman"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 0
    when "leader_winona"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 1
    when "leader_tate"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 2
    when "leader_liza"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 3
    when "leader_juan"
      $game_map.events[1].direction = 6
      $game_map.events[1].pattern = 0
    end
  when 3 # Sinnoh Leaders, add || for Team Leaders
    $game_map.events[1].character_name = "trainer_Sheet4"
    case opponent[0].downcase
    when "leader_roark"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 0
    when "leader_gardenia"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 1
    when "leader_maylene"
      $game_map.events[1].character_name = "trainer_LEADER_Maylene"
      $game_map.events[1].direction = 2
    when "leader_wake"
      $game_map.events[1].direction = 2
      $game_map.events[1].pattern = 3
    when "leader_fantina"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 0
    when "leader_byron"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 1
    when "leader_candice"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 2
    when "leader_volkner"
      $game_map.events[1].direction = 4
      $game_map.events[1].pattern = 3
    end
  when 4 # Unova Leaders
      $game_map.events[1].character_name = "trainer_Sheet5"
      case opponent[0].downcase
      when "leader_cilan"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 0
      when "leader_chili"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 1
      when "leader_cress"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 2
      when "leader_lenora"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 3
      when "leader_burgh"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 0
      when "leader_elesa"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 1
      when "leader_clay"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 2
      when "leader_skyla"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 3
      when "leader_brycen"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 0
      when "leader_drayden"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 1
      when "leader_cheren"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 2
      when "leader_roxie"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 3
      when "leader_marlon"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 0
      end
  when 5 # Kalos Leaders and Kalos Elite
      $game_map.events[1].character_name = "trainer_Sheet6"
      case opponent[0].downcase
      when "leader_viola"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 0
      when "leader_grant"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 1
      when "leader_korrina"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 2
      when "leader_ramos"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 3
      when "leader_clemont"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 0
      when "leader_valerie"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 1
      when "leader_olympia"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 2
      when "leader_wulfric"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 3
      when "elite_malva"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 0
      when "elite_siebold"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 1
      when "elite_wikstrom"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 2
      when "elite_drasna"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 3
      when "elite_sycamore"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 0
    when "elite_looker"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 1
    when "elite_trevor"
      $game_map.events[1].direction = 8
      $game_map.events[1].pattern = 2
    end
   when 6 # Alola Captains and Alola Elites
      $game_map.events[1].character_name = "trainer_Sheet7"
      case opponent[0].downcase
      when "captain_ilima"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 0
      when "captain_lana"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 1
      when "captain_kiawe"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 2
      when "captain_mallow"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 3
      when "captain_sophocles"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 0
      when "captain_acerola"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 1
      when "captain_mina"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 2
      when "elite_hala"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 3
      when "elite_olivia"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 0
      when "elite_nanu"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 1
      when "elite_hapu"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 2
      when "elite_molayne"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 3
      when "elite_kahili"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 0
      when "elite_gladion"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 1
      when "elite_lusamine"
        $game_map.events[1].direction = 8
        $game_map.events[1].pattern = 2
      end
   when 7 # Galar Leaders
      $game_map.events[1].character_name = "trainer_Sheet10"
      case opponent[0].downcase
      when "leader_milo"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 0
      when "leader_nessa"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 1
      when "leader_kabu"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 2
      when "leader_bea"
        $game_map.events[1].direction = 2
        $game_map.events[1].pattern = 3
      when "leader_allister"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 0
      when "leader_opal"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 1
      when "leader_geordie"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 2
      when "leader_melony"
        $game_map.events[1].direction = 4
        $game_map.events[1].pattern = 3
      when "leader_piers"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 0
      when "leader_raihan"
        $game_map.events[1].direction = 6
        $game_map.events[1].pattern = 1
      end
  end
end

def pbSummitMainTrainer
  pbSummitPrepBattle
  type = $game_variables[30][0]
  name = $game_variables[30][1]
  version = $game_variables[15]
  p $game_variables[30]
  TrainerBattle.start(type, name, version)

  $Trainer.party = $game_variables[27]
  if $game_variables[32] == 1
    $game_variables[33] += 1
  end
  if $game_variables[33] == 4 # when cleared bracket
    $game_variables[31] += 1 # next bracket
  end
end

def pbSummitBracketUnlock
  bracketwon = $bracketnames[$game_variables[31]-1]
  bracketunlocked = $bracketnames[$game_variables[31]]
  if $game_variables[41] == nil
    $game_variables[41] = []
  end
  $game_variables[41].push($game_variables[31])

  pbMessage(_INTL("\\rCongratulations on defeating the {1}!",bracketwon))
  pbSEPlay("Slots coin")
  $Trainer.money += 700
  pbMessage("\\G\\rYou have earned $700 for your performance.")
  pbMessage(_INTL("\\rYou have also successfully unlocked the {1}!",bracketunlocked))
end

def pbSummitPrepBattle
  setBattleRule("canLose")
  setBattleRule("cannotRun")
  setBattleRule("noExp")
  setBattleRule("noMoney")
  setBattleRule("disablePokeBalls")
  setBattleRule("setStyle")
  setBattleRule("outcomeVar", 32)
  tempParty = []
  for poke in $Trainer.party
    clonepoke = poke.clone
    clonepoke.ev = poke.ev.clone
    clonepoke.iv = poke.iv.clone
    clonepoke.item = poke.item.clone
    clonepoke.ability = poke.ability.clone
    clonepoke.nature = poke.nature.clone
    clonepoke.gender = poke.gender.clone
    for j in 0...6
      clonepoke.ev[j] = poke.ev[j]
      clonepoke.iv[j] = poke.iv[j]
    end
    clonepoke.level = 50 # Set this to whatever preset level you want
    clonepoke.calc_stats
    clonepoke.mail = nil
    tempParty.push(clonepoke)
  end
    $game_variables[27] = $Trainer.party
    $Trainer.party = tempParty
    $game_variables[28] = tempParty
    $game_switches[36] = true
end

def pbSummitEndBattle(trainertype, name)
  pbSummitDeleteTrainer(trainertype, name)
  $Trainer.party = $game_variables[27]
  $game_switches[36] = false
end

def pbSummitPrepArcadeTrainer
  allTypes = [:YOUNGSTER, :LASS, :BUGCATCHER]
    
  namesFem = ["Emma","Sophia","Olivia","Isabella","Ava","Mia","Abigail","Emily","Madison","Charlotte","Elizabeth","Amelia","Chloe","Ella","Evelyn","Avery","Sofia","Harper","Grace","Addison","Victoria","Natalie","Lily","Aubrey","Lillian","Zoey","Hannah","Layla","Brooklyn","Samantha","Zoe","Leah","Scarlett","Riley","Camila","Savannah","Anna","Audrey","Allison","Aria","Gabriella","Hailey","Claire","Sarah","Aaliyah","Kaylee","Nevaeh","Penelope","Alexa","Arianna","Stella","Alexis","Bella","Nora","Ellie","Ariana","Lucy","Mila","Peyton","Genesis","Alyssa","Taylor","Violet","Maya","Caroline","Madelyn","Skylar","Serenity","Ashley","Brianna","Kennedy","Autumn","Eleanor","Kylie","Sadie","Paisley","Julia","Mackenzie","Sophie","Naomi","Eva","Khloe","Katherine","Gianna","Melanie","Aubree","Piper","Ruby","Lydia","Faith","Madeline","Alexandra","Kayla","Hazel","Lauren","Annabelle","Jasmine","Aurora","Alice","Makayla","Sydney","Bailey","Luna","Maria","Reagan","Morgan","Isabelle","Rylee","Kimberly","Andrea","London","Elena","Jocelyn","Natalia","Trinity","Eliana","Vivian","Cora","Quinn","Liliana","Molly","Jade","Clara","Valentina","Mary","Brielle","Hadley","Kinsley","Willow","Brooke","Lilly","Delilah","Payton","Mariah","Paige","Jordyn","Nicole","Mya","Josephine","Isabel","Lyla","Adeline","Destiny","Ivy","Emilia","Rachel","Angelina","Valeria","Kendall","Sara","Ximena","Isla","Aliyah","Reese","Vanessa","Juliana","Mckenzie","Amy","Laila","Adalynn","Emery","Margaret","Eden","Gabrielle","Kaitlyn","Ariel","Gracie","Brooklynn","Melody","Jessica","Valerie","Adalyn","Adriana","Elise","Michelle","Rebecca","Daisy","Everly","Katelyn","Ryleigh","Catherine","Norah","Alaina","Athena","Leilani","Londyn","Eliza","Jayla","Summer","Lila","Makenzie","Izabella","Daniela","Stephanie","Julianna","Rose","Alana","Harmony","Jennifer","Maximus","Hayden"]
  namesMale = ["Noah","Liam","Jacob","Mason","William","Ethan","Michael","Alexander","James","Elijah","Daniel","Benjamin","Aiden","Jayden","Logan","Matthew","David","Joseph","Lucas","Jackson","Anthony","Joshua","Samuel","Andrew","Gabriel","Christopher","John","Dylan","Carter","Isaac","Ryan","Luke","Oliver","Nathan","Henry","Owen","Caleb","Wyatt","Christian","Sebastian","Jack","Jonathan","Landon","Julian","Isaiah","Hunter","Levi","Aaron","Eli","Charles","Thomas","Connor","Brayden","Nicholas","Jaxon","Jeremiah","Cameron","Evan","Adrian","Jordan","Gavin","Grayson","Angel","Robert","Tyler","Josiah","Austin","Colton","Brandon","Jose","Dominic","Kevin","Zachary","Ian","Chase","Jason","Adam","Ayden","Parker","Hudson","Cooper","Nolan","Lincoln","Xavier","Carson","Jace","Justin","Easton","Mateo","Asher","Bentley","Blake","Nathaniel","Jaxson","Leo","Kayden","Tristan","Luis","Elias","Brody","Bryson","Juan","Vincent","Cole","Micah","Ryder","Theodore","Carlos","Ezra","Damian","Miles","Santiago","Max","Jesus","Leonardo","Sawyer","Diego","Alex","Roman","Maxwell","Eric","Greyson","Hayden","Giovanni","Wesley","Axel","Camden","Braxton","Ivan","Ashton","Declan","Bryce","Timothy","Antonio","Silas","Kaiden","Ezekiel","Jonah","Weston","George","Harrison","Steven","Miguel","Richard","Bryan","Kaleb","Victor","Aidan","Jameson","Joel","Patrick","Jaden","Colin","Everett","Preston","Maddox","Edward","Alejandro","Kaden","Jesse","Emmanuel","Kyle","Brian","Emmett","Jude","Marcus","Kingston","Kai","Alan","Malachi","Grant","Jeremy","Riley","Jayce","Bennett","Abel","Ryker","Caden","Brantley","Luca","Brady","Calvin","Sean","Oscar","Jake","Maverick","Abraham","Mark","Tucker","Nicolas","Bradley","Kenneth","Avery","Cayden","King","Paul","Amir","Gael","Graham"]

  trainertype = allTypes[rand(allTypes.length)]

  if GameData::TrainerType.get(trainertype).gender == 1
    name = namesFem[rand(namesFem.length)]
  else
    name = namesMale[rand(namesMale.length)]
  end
  @arcadetype = trainertype
  @arcadename = name
  charname = "trainer_"
  charname.concat(trainertype.to_s.upcase)
  $game_variables[34] = charname
end

def pbSummitArcadeTrainer
  pbNewSummitTrainer(@arcadetype, @arcadename)
  GameData::TrainerType.get(@arcadetype).id
  pbSummitPrepBattle
  TrainerBattle.start(@arcadetype, @arcadename)
  pbSummitEndBattle(@arcadetype, @arcadename)
end

def pbSummitChoosePokemon(tr_type, party_size = 3)
  type = tr_type.to_s.downcase
  num = nil
  party = []
  trainerpkmn = []

  case type
  when "youngster"
      trainerpkmn = [
        [:RATICATE,0],
        [:ARBOK,0],
        [:FEAROW,0],
        [:PIDGEOT,0],
        [:SANDSLASH,0],
        [:NIDOKING,0],
        [:NIDOQUEEN,0],
        [:GOLEM,0],
        [:PRIMEAPE,0],
        [:DUGTRIO,0],
        [:FURRET,0],
        [:NOCTOWL,0],
        [:QUAGSIRE,0],
        [:MIGHTYENA,0],
        [:SWELLOW,0],
        [:SHIFTRY,0],
        [:LUDICOLO,0],
        [:MANECTRIC,0],
        [:SWALOT,0],
        [:STARAPTOR,0],
        [:KRICKETUNE,0],
        [:LUXRAY,0],
        [:SKUNTANK,0],
        [:BIBAREL,0],
        [:GASTRODON,0],
        [:WATCHOG,0],
        [:STOUTLAND,0],
        [:SEISMITOAD,0],
        [:SCOLIPEDE,0],
        [:CONKELDURR,0],
        [:UNFEZANT,0],
        [:SAWSBUCK,0],
        [:GALVANTULA,0],
        [:TALONFLAME,0],
        [:DIGGERSBY,0],
        [:PYROAR,0],
        [:GUMSHOOS,0],
        [:VIKAVOLT,0],
        [:RATICATE,1],
        [:MUK,1],
        [:LYCANROC,0],
        [:ORBEETLE,0],
        [:THIEVUL,0],
        [:GREEDENT,0],
        [:ELDEGOSS,0]
    ]
    when "lass"
      trainerpkmn = [
        [:RATICATE,0],
        [:ARBOK,0],
        [:FEAROW,0],
        [:PIDGEOT,0],
        [:SANDSLASH,0],
        [:NIDOKING,0],
        [:NIDOQUEEN,0],
        [:WIGGLYTUFF,0],
        [:CLEFABLE,0],
        [:VILEPLUME,0],
        [:BELLOSSOM,0],
        [:RAICHU,0],
        [:PERSIAN,0],
        [:FURRET,0],
        [:QUAGSIRE,0],
        [:AZUMARILL,0],
        [:AMPHAROS,0],
        [:GOLDUCK,0],
        [:GRANBULL,0],
        [:SHIFTRY,0],
        [:LUDICOLO,0],
        [:BRELOOM,0],
        [:DELCATTY,0],
        [:SWELLOW,0],
        [:BIBAREL,0],
        [:PACHIRISU,0],
        [:LOPUNNY,0],
        [:ROSERADE,0],
        [:STARAPTOR,0],
        [:WHIMSICOTT,0],
        [:LILLIGANT,0],
        [:LIEPARD,0],
        [:SWOOBAT,0],
        [:TOGEKISS,0],
        [:SWANNA,0],
        [:FLORGES,0],
        [:DEDENNE,0],
        [:DIGGERSBY,0],
        [:KOMALA,0],
        [:LYCANROC,2],
        [:TOUCANNON,0],
        [:TSAREENA,0],
        [:ARAQUANID,0],
        [:HATTERENE,0],
        [:GRIMMSNARL],
        [:DREDNAW,0],
        [:ALCREMIE,0]
    ]
    when "bugcatcher"
      trainerpkmn = [
        [:BUTTERFREE,0],
        [:BEEDRILL,0],
        [:VENOMOTH,0],
        [:PINSIR,0],
        [:PARASECT,0],
        [:SCIZOR,0],
        [:LEDIAN,0],
        [:ARIADOS,0],
        [:FORRETRESS,0],
        [:HERACROSS,0],
        [:BEAUTIFLY,0],
        [:DUSTOX,0],
        [:MASQUERAIN,0],
        [:NINJASK,0],
        [:SHEDINJA,0],
        [:WORMADAM,0],
        [:WORMADAM,1],
        [:WORMADAM,2],
        [:MOTHIM,0],
        [:VESPIQUEN,0],
        [:SCOLIPEDE,0],
        [:CRUSTLE,0],
        [:ESCAVALIER,0],
        [:GALVANTULA,0],
        [:VOLCARONA,0],
        [:VIVILLON,0],
        [:VIKAVOLT,0],
        [:RIBOMBEE,0],
        [:GOLISOPOD,0],
        [:ORBEETLE,0],
        [:ARMALDO,0],
        [:ARAQUANID,0],
        [:CENTISKORCH,0],
        [:FROSMOTH,0],
        [:KRICKETUNE,0],
        [:ACCELGOR,0]
    ]
  end
  for i in 0...party_size
    loop do
      num = rand(0...(trainerpkmn.length))
      pkmn = trainerpkmn[num]
      for n in $allpkmn
        if [n[0], n[5]] == pkmn
          pkmninfo = n
          break
        end
      end
      if !party.include?(pkmninfo)
        party.push(pkmninfo)
        break
      end
    end
  end
  return party
end

def pbNewSummitTrainer(tr_type, tr_name, tr_version = 0, save_changes = true, party_size = 3)
  party = pbSummitChoosePokemon(tr_type, party_size)
  for i in 0...party_size
    loop do
      if party
        pkmn = party[i]
        if pkmn[5] == nil
          pkmn[5] = 0
        end
        break
      else
        pbMessage(_INTL("This trainer must have at least 1 Pokémon!"))
        break
      end
    end
  end
  trainer = [tr_type, tr_name, [], party, tr_version]

  case $game_variables[15]
    when 0 # Easy
      ivval = 10
    when 1 # Standard
      ivval = 20
    when 2, 3 # Hard, Extreme
      ivval = 31
  end

  if save_changes
    @trainer_hash = {
      :trainer_type => tr_type,
      :name         => tr_name,
      :version      => tr_version,
      :pokemon      => []
    }
    party.each do |pkmn|
      @trainer_hash[:pokemon].push(
        {
          :species       => pkmn[0],
          :level         => 50,
          :moves         => [pkmn[1], pkmn[2], pkmn[3], pkmn[4]],
          :iv            => {:HP => ivval, :ATTACK => ivval, :DEFENSE => ivval, :SPECIAL_ATTACK => ivval, :SPECIAL_DEFENSE => ivval, :SPEED => ivval},
          :form          => pkmn[5],
          :ability_index => pkmn[6]
        }
      )
    end
    # Add trainer's data to records
    @trainer_hash[:id] = [@trainer_hash[:trainer_type], @trainer_hash[:name], @trainer_hash[:version]]
    GameData::Trainer.register(@trainer_hash)
    GameData::Trainer.save
    pbConvertTrainerData
  end
  return trainer
end

def pbSummitDeleteTrainer(tr_type, name, tr_version = 0)
  # Remove trainer's data from records
  trainer_id = [tr_type, name, tr_version]
  tr_data = GameData::Trainer::DATA[trainer_id]
  GameData::Trainer::DATA.delete(trainer_id)
  GameData::Trainer.save
  pbConvertTrainerData
end

def pbSummitChooseRegion
  regionlist = ["Kanto","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","Galar"]
  cmd = pbMessage("\\rWhat Pokémon starter set would you like to claim?",regionlist)
  pbSummitGetStarterSet(regionlist[cmd])
end

def pbSummitGetStarterSet(region)
  case region.downcase
    when "kanto"
      pbSummitGivePokemon(:VENUSAUR,0)
      pbSummitGivePokemon(:CHARIZARD,0)
      pbSummitGivePokemon(:BLASTOISE,0)
      pbSummitGivePokemon(:RAICHU,0)
      pbSummitGivePokemon(:PIDGEOT,0)
      pbSummitGivePokemon(:HITMONLEE,0)
    when "johto"
      pbSummitGivePokemon(:MEGANIUM,0)
      pbSummitGivePokemon(:TYPHLOSION,0)
      pbSummitGivePokemon(:FERALIGATR,0)
      pbSummitGivePokemon(:AMPHAROS,0)
      pbSummitGivePokemon(:NOCTOWL,0)
      pbSummitGivePokemon(:HITMONTOP,0)
    when "hoenn"
      pbSummitGivePokemon(:SCEPTILE,0)
      pbSummitGivePokemon(:BLAZIKEN,0)
      pbSummitGivePokemon(:SWAMPERT,0)
      pbSummitGivePokemon(:MANECTRIC,0)
      pbSummitGivePokemon(:SWELLOW,0)
      pbSummitGivePokemon(:HARIYAMA,0)
    when "sinnoh"
      pbSummitGivePokemon(:TORTERRA,0)
      pbSummitGivePokemon(:INFERNAPE,0)
      pbSummitGivePokemon(:EMPOLEON,0)
      pbSummitGivePokemon(:LUXRAY,0)
      pbSummitGivePokemon(:STARAPTOR,0)
      pbSummitGivePokemon(:LUCARIO,0)
    when "unova"
      pbSummitGivePokemon(:SERPERIOR,0)
      pbSummitGivePokemon(:EMBOAR,0)
      pbSummitGivePokemon(:SAMUROTT,0)
      pbSummitGivePokemon(:ZEBSTRIKA,0)
      pbSummitGivePokemon(:UNFEZANT,0)
      pbSummitGivePokemon(:CONKELDURR,0)
    when "kalos"
      pbSummitGivePokemon(:CHESNAUGHT,0)
      pbSummitGivePokemon(:DELPHOX,0)
      pbSummitGivePokemon(:GRENINJA,0)
      pbSummitGivePokemon(:HELIOLISK,0)
      pbSummitGivePokemon(:TALONFLAME,0)
      pbSummitGivePokemon(:PANGORO,0)
    when "alola"
      pbSummitGivePokemon(:DECIDUEYE,0)
      pbSummitGivePokemon(:INCINEROAR,0)
      pbSummitGivePokemon(:PRIMARINA,0)
      pbSummitGivePokemon(:VIKAVOLT,0)
      pbSummitGivePokemon(:TOUCANNON,0)
      pbSummitGivePokemon(:CRABOMINABLE,0)
    when "galar"
      pbSummitGivePokemon(:RILLABOOM,0)
      pbSummitGivePokemon(:CINDERACE,0)
      pbSummitGivePokemon(:INTELEON,0)
      pbSummitGivePokemon(:TOXTRICITY,0)
      pbSummitGivePokemon(:CORVIKNIGHT,0)
      pbSummitGivePokemon(:GRAPPLOCT,0)
  end
end

def pbSummitSuperTrain
  @evstats = ["HP","Attack","Defense","Special Attack","Special Defense","Speed"]
  @selection = @evstats.clone

  loop do
    pbMessage("\\rWhich Pokémon would you like to super train?")
    pkmn = pbChoosePokemon(1, 3)
    if $game_variables[1] < 0
      cmd = pbMessage("Cancel super training?",["Yes", "No"],1)
      if cmd <= 0
        return false
        break
      end
    else
      pbMessage("\\rWhich stats would you like this Pokémon to specialize in?")
      loop do
        cmd = pbMessage("\\rSelect a stat to specialize in.",@evstats,-1)
        if cmd == 1
          break
        else
          @stat1 = @evstats[cmd]
          @selection.delete_at(cmd)
          break
        end
      end
      loop do
        cmd = pbMessage("\\rSelect another stat to specialize in.",@selection,-1)
        if cmd == -1
          break
        else
          cmd2 = @selection[cmd]
          for stat in @evstats
            if stat.equal?(cmd2)
              @stat2 = stat
            end
          end
          break
        end
      end

      @chosenstats = [@stat1, @stat2]

      pkmn = pbGetPokemon(1)

      loop do
        cmd = pbMessage(_INTL("\\rDo you want us to train your #{pbGetPokemon(1).species.downcase.capitalize} in {1} and {2}?",@chosenstats[0],@chosenstats[1]),["Yes","No"],-1)
        if cmd == -1
          break
        elsif cmd == 1
          cmd2 = pbMessage("Cancel super training?",["Yes", "No"],1)
          if cmd2 == 0
            return false
            break
          end
        else
          for i in $allstats
            pkmn.ev[i] = 0
          end
          for statname in @chosenstats
            statnameint = statname.clone
            if statname.include?(" ")
              statnameint.gsub!(/\s/, "_")
            end
            pkmn.ev[statnameint.upcase.to_sym] = 252
          end
          pbMessage(_INTL("\\G\\rYour #{pbGetPokemon(1).species.downcase.capitalize} now specializes in {1} and {2}.",@chosenstats[0],@chosenstats[1]))
          return true
          break
        end
      end
      break
    end
  end
end

def pbSummitChangeNature
  loop do
    pbMessage("\\rWhich Pokémon would you like to change the nature of?")
    pkmn = pbChoosePokemon(1, 3)
    if $game_variables[1] < 0
      cmd = pbMessage("Cancel nature change?",["Yes", "No"],1)
      if cmd <= 0
        return false
        break
      end
    else
      stats = []
      for stat in $allstats
        if stat != :HP
          statname = stat.clone
          statname = statname.to_s.downcase
          statname.gsub!(/_/, " ")
          statname.gsub!(/(\w+)/) {|word| word.capitalize}
          stats.push(statname)
        end
      end
      stats << "None"
      loop do
        cmd = pbMessage(_INTL("\\rWhich stat should this nature raise?"),stats,-1)
        naturelist = []
        if cmd == -1
          break
        elsif cmd == 6 # None
          for i in GameData::Nature::DATA.keys
            naturename = i.to_s.downcase
            if GameData::Nature.try_get(i).stat_changes.empty?
              naturelist.push(naturename.capitalize)
            end
          end
        else
          for i in GameData::Nature::DATA.keys
            naturename = i.to_s.downcase
            if !GameData::Nature.try_get(i).stat_changes.empty?
              statraise = GameData::Nature.get(i).stat_changes[0][0]
              if statraise == $allstats[cmd+1]
                name = naturename.capitalize
                info = name.clone
                info << " (-"
                statdrop = GameData::Nature.get(i).stat_changes[1][0].clone
                statdrop = statdrop.to_s.downcase
                statdrop.gsub!(/_/, " ")
                statdrop.gsub!(/special/, "sp.")
                statdrop.gsub!(/attack/, "atk")
                statdrop.gsub!(/defense/, "def")
                statdrop.gsub!(/(\w+)/) {|word| word.capitalize}
                info << statdrop << ")"
                naturelist.push(info)
              end
            end
          end
        end
        loop do
          cmd = pbMessage(_INTL("\\rWhat nature would you like to give your #{pbGetPokemon(1).species.downcase.capitalize}?"),naturelist,-1)
          if cmd >= 0
            @chosennature = naturelist[cmd].split[0]
            pkmn = pbGetPokemon(1)
            loop do
              cmd = pbMessage(_INTL("\\rDo you want us to give your #{pbGetPokemon(1).species.downcase.capitalize} a {1} nature?",@chosennature),["Yes","No"],-1)
              if cmd == -1
                break
              elsif cmd == 1
                cmd2 = pbMessage("Cancel nature change?",["Yes", "No"],1)
                if cmd2 == 0
                  return false
                  break
                end
              else
                for i in GameData::Nature::DATA.keys
                  if @chosennature == GameData::Nature.get(i).real_name
                    pkmn.nature = GameData::Nature.get(i)
                    pbMessage(_INTL("\\G\\rYour #{pbGetPokemon(1).species.downcase.capitalize}'s nature is now {1}.",@chosennature.to_s))
                    return true
                    break
                    break
                    break
                    break
                    break
                  end
                end
              end
            end
          else
            break
          end
        end
      end
    end
  end
end

def pbSummitChangeAbility
  loop do
    pbMessage("\\rWhich Pokémon would you like to change the ability of?")
    pkmn = pbChoosePokemon(1, 3)
    if $game_variables[1] < 0
      cmd = pbMessage("Cancel ability change?",["Yes", "No"],1)
      if cmd <= 0
        return false
        break
      end
    else
      loop do
        pkmn = pbGetPokemon(1)
        abilitylist = []
        abilities = []
        for ability in pkmn.species_data.abilities
          i = ability.to_s
          abilityname = GameData::Ability.get(i).real_name
          abilities.push(abilityname)
          listing = abilityname.clone
          price = 2000
          listprice = price.to_s.clone
          listprice.insert(1, ",")
          listing << " - $" << listprice
          abilitylist.push(listing)
        end
        for ability in pkmn.species_data.hidden_abilities
          i = ability.to_s
          abilityname = GameData::Ability.get(i).real_name
          abilities.push(abilityname)
          listing = abilityname.clone
          price = 3000
          listprice = price.to_s.clone
          listprice.insert(1, ",")
          listing << " - $" << listprice
          abilitylist.push(listing)
        end
        cmd = pbMessage("\\G\\rWhich ability would you like this Pokémon to have?",abilitylist,-1)
        if cmd == -1
          break
        else
          @chosenability = abilities[cmd]
          if pkmn.species_data.abilities.include?(@chosenability.upcase.to_sym)
            price = 2000
          else
            price = 3000
          end
          listprice = price.to_s.clone
          listprice.insert(1, ",")
          if $Trainer.money < price
            pbMessage("\\rSorry, you don't have enough money.")
            return false
            break
          end
          loop do
            cmd = pbMessage(_INTL("\\rChange your #{pbGetPokemon(1).species.downcase.capitalize}'s ability to in {1}? It'll cost \\G$#{listprice}.",@chosenability),["Yes","No"],-1)
            if cmd == -1
              break
            elsif cmd == 1
              cmd2 = pbMessage("Cancel ability change?",["Yes", "No"],1)
              if cmd2 == 0
                return false
                break
              end
            else
              for i in GameData::Ability::DATA.keys
                if @chosenability == GameData::Ability.get(i).real_name
                  pkmn.ability = GameData::Ability.get(i)
                  break
                end
              end
              pbMessage(_INTL("\\G\\rYour #{pbGetPokemon(1).species.downcase.capitalize}'s ability is now {1}.",@chosenability))
              $Trainer.money -= price
              return true
              break
            end
          end
          break
        end
      end
    end
  end
end

def pbSummitMonkey
    pbSummitGivePokemon(:SIMISAGE,0)
    pbSummitGivePokemon(:SIMISEAR,0)
    pbSummitGivePokemon(:SIMIPOUR,0)
end

def pbDrawMoveList 
  overlay=@sprites["overlay"].bitmap
  overlay.clear
  type1_number = GameData::Type.get(@pokemon.type1).id_number
  type2_number = GameData::Type.get(@pokemon.type2).id_number
  type1rect=Rect.new(0, type1_number * 28, 64, 28)
  type2rect=Rect.new(0, type2_number * 28, 64, 28)
  if @pokemon.type1==@pokemon.type2
    overlay.blt(400,70,@typebitmap.bitmap,type1rect)
  else
    overlay.blt(366,70,@typebitmap.bitmap,type1rect)
    overlay.blt(436,70,@typebitmap.bitmap,type2rect)
  end
  textpos=[
     [_INTL("Teach which move?"),16,2,0,Color.new(88,88,80),Color.new(168,184,184)]
  ]
  imagepos=[]
  yPos=76
  for i in 0...VISIBLEMOVES
    moveobject=@moves[@sprites["commands"].top_item+i]
    if moveobject
      moveData=GameData::Move.get(moveobject)
      type_number = GameData::Type.get(moveData.type).id_number
      imagepos.push(["Graphics/Pictures/types", 12, yPos + 8, 0, type_number * 28, 64, 28])
      textpos.push([moveData.name,80,yPos,0,Color.new(248,248,248),Color.new(0,0,0)])
      if learnedmoves.include?(i)
        textpos.push([_INTL("Cost:"),112,yPos+32,0,Color.new(64,64,64),Color.new(176,176,176)])
        textpos.push([_INTL("Free",moveData.total_pp),230,yPos+32,1,
           Color.new(64,64,64),Color.new(176,176,176)])
      else
        textpos.push(["Cost:",80,yPos,0,Color.new(64,64,64),Color.new(176,176,176)])
        textpos.push(["$500",228,yPos+32,1,Color.new(64,64,64),Color.new(176,176,176)])
      end
    end
    yPos+=64
  end
  imagepos.push(["Graphics/Pictures/reminderSel",
     0,78+(@sprites["commands"].index-@sprites["commands"].top_item)*64,
     0,0,258,72])
  selMoveData=GameData::Move.get(@moves[@sprites["commands"].index])
  basedamage=selMoveData.base_damage
  category=selMoveData.category
  accuracy=selMoveData.accuracy
  textpos.push([_INTL("CATEGORY"),272,108,0,Color.new(248,248,248),Color.new(0,0,0)])
  textpos.push([_INTL("POWER"),272,140,0,Color.new(248,248,248),Color.new(0,0,0)])
  textpos.push([basedamage<=1 ? basedamage==1 ? "???" : "---" : sprintf("%d",basedamage),
        468,140,2,Color.new(64,64,64),Color.new(176,176,176)])
  textpos.push([_INTL("ACCURACY"),272,172,0,Color.new(248,248,248),Color.new(0,0,0)])
  textpos.push([accuracy==0 ? "---" : "#{accuracy}%",
        468,172,2,Color.new(64,64,64),Color.new(176,176,176)])
  pbDrawTextPositions(overlay,textpos)
  imagepos.push(["Graphics/Pictures/category",436,116,0,category*28,64,28])
  if @sprites["commands"].index<@moves.length-1
    imagepos.push(["Graphics/Pictures/reminderButtons",48,350,0,0,76,32])
  end
  if @sprites["commands"].index>0
    imagepos.push(["Graphics/Pictures/reminderButtons",134,350,76,0,76,32])
  end
  pbDrawImagePositions(overlay,imagepos)
  drawTextEx(overlay,272,214,230,5,selMoveData.description,
     Color.new(64,64,64),Color.new(176,176,176))
end

def pbSummitInitShopItems
  typeitems = [:DRACOPLATE, :DREADPLATE, :EARTHPLATE, :FISTPLATE, :FLAMEPLATE, :ICICLEPLATE,
    :INSECTPLATE, :IRONPLATE, :MEADOWPLATE, :MINDPLATE, :PIXIEPLATE, :SKYPLATE, :SPLASHPLATE, :SPOOKYPLATE,
    :STONEPLATE, :TOXICPLATE, :ZAPPLATE]
    $game_variables[38] = typeitems
  utilitems = [:AIRBALLOON, :ASSAULTVEST, :BIGROOT, :BINDINGBAND, :BLUNDERPOLICY, :BRIGHTPOWDER, :CHOICEBAND, 
    :CHOICESCARF, :CHOICESPECS, :DAMPROCK, :DESTINYKNOT, :EJECTBUTTON, :EJECTPACK, :EXPERTBELT, :FLAMEORB, 
    :FLOATSTONE, :FOCUSBAND, :FOCUSSASH, :GRIPCLAW, :HEATROCK, :HEAVYDUTYBOOTS, :ICYROCK, :IRONBALL, 
    :KINGSROCK, :LAGGINGTAIL, :LIFEORB, :LIGHTCLAY, :LUCKINCENSE, :MACHOBRACE, :MENTALHERB, :METRONOME, 
    :MUSCLEBAND, :POWERHERB, :PROTECTIVEPADS, :QUICKCLAW, :RAZORCLAW, :RAZORFANG, :REDCARD, :RINGTARGET, 
    :ROCKYHELMET, :ROOMSERVICE, :SAFETYGOGGLES, :SCOPELENS, :SHEDSHELL, :SMOKEBALL, :SMOOTHROCK, :STICKYBARB,
    :TERRAINEXTENDER, :THROATSPRAY, :TOXICORB, :UTILITYUMBRELLA, :WHITEHERB, :WIDELENS, :WISEGLASSES, :ZOOMLENS]
    $game_variables[39] = utilitems
  berries = [:CHERIBERRY, :CHESTOBERRY, :PECHABERRY, 
    :RAWSTBERRY, :ASPEARBERRY, :ORANBERRY, :PERSIMBERRY, 
    :LUMBERRY, :SITRUSBERRY, :OCCABERRY, :PASSHOBERRY, 
    :WACANBERRY, :RINDOBERRY, :YACHEBERRY, :CHOPLEBERRY, 
    :KEBIABERRY, :SHUCABERRY, :COBABERRY, :PAYAPABERRY, 
    :TANGABERRY, :CHARTIBERRY, :KASIBBERRY, :HABANBERRY, 
    :COLBURBERRY, :BABIRIBERRY, :CHILANBERRY, :ROSELIBERRY]
    $game_variables[40] = berries
end

def pbSummitGetShopItems(section)
  items = []
  case section
    when "plates"
      items = $game_variables[38]
    when "utility"
      items = $game_variables[39]
    when "berries"
      items = $game_variables[40]
  end
  return items
end

def pbBuyScreen
  @scene.pbStartBuyScene(@stock,@adapter)
  item=nil
  loop do
    item=@scene.pbChooseBuyItem
    break if !item
    quantity=0
    itemname=@adapter.getDisplayName(item)
    price=@adapter.getPrice(item)
    if @adapter.getMoney<price
      pbDisplayPaused(_INTL("You don't have enough money."))
      next
    end
    if !pbConfirm(_INTL("Certainly. You want {1}. That will be ${2}. OK?",
       itemname,price.to_s_formatted))
      next
    end
    quantity=1
    if @adapter.getMoney<price
      pbDisplayPaused(_INTL("You don't have enough money."))
      next
    end
    added=0
    quantity.times do
      break if !@adapter.addItem(item)
      added+=1
    end
    if added!=quantity
      added.times do
        if !@adapter.removeItem(item)
          raise _INTL("Failed to delete stored items")
        end
      end
      pbDisplayPaused(_INTL("You have no more room in the Bag."))
    else
      @adapter.setMoney(@adapter.getMoney-price)
      for i in 0...@stock.length
          @stock[i]=nil
      end
      @stock.compact!
      pbDisplayPaused(_INTL("Here you are! Thank you!")) { pbSEPlay("Mart buy item") }
    end
  end
  @scene.pbEndBuyScene
end